{"version":3,"sources":["house/HouseError.jsx","house/HouseLoading.jsx","house/ImageList.jsx","Navbar.jsx","house/HouseLoaded.jsx","house/House.jsx","search/SearchResults.jsx","search/SearchResultsError.jsx","search/Search.jsx","map/MapView.jsx","splash/SplashPage.jsx","App.js","index.js"],"names":["HouseError","HouseLoading","className","LoadingOutlined","ImageList","props","useState","current","setCurrent","directus_files_id","title","description","images","map","img","width","src","process","id","preview","onVisibleChange","visible","Navbar","style","backgroundImage","to","SearchOutlined","HomeOutlined","BASEMAPS","buildCitation","port","window","location","permalink","protocol","hostname","user_created","last_name","first_name","substring","house_name","Date","date_updated","getUTCFullYear","href","copyToClipboard","el","document","querySelector","copy","innerHTML","asHtml","HouseLoaded","basemap","setBasemap","imageIds","length","latitude","longitude","city","MapContainer","center","zoom","zoomControl","attributionControl","TileLayer","url","Marker","position","onChange","useAerial","checkedChildren","unCheckedChildren","number_of_rooms","parseFloat","house_dimensions","toFixed","building_phases","HourglassOutlined","construction_date","abandon_date","house_description","dating_of_phases","situation_of_entrance","representation_room_typology","atrium_typology","atrium_extension","impluvium_extension","other_uncovered_spaces","comments","plans_of_the_house","interesting_links","link","target","bibliography","CopyOutlined","onClick","fetcher","fetch","then","r","json","House","houseId","match","params","useSWR","data","error","getImageSrc","result","SearchResultsLoaded","rows","key","image","constructed","text","numeric","construction_date_numeric","abandonded","abandon_date_numeric","dimensions","complete_plan","loading","indicator","dataSource","pagination","Column","dataIndex","render","name","record","SearchResultsError","SearchResultsContainer","query","useQuery","gql","SearchResults","items","house","Search","setQuery","placeholder","allowClear","size","onSearch","value","MapView","SplashPage","alt","App","path","component","client","ApolloClient","uri","cache","InMemoryCache","typePolicies","keyFields","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.69a252e0.chunk.js","sourcesContent":["const HouseError = () => {\n\n  return (\n    <div>Error!</div>\n  )\n\n}\n\nexport default HouseError;","import { LoadingOutlined } from '@ant-design/icons';\n\nconst HouseLoading = () => {\n\n  return (\n    <div className=\"house loading\">\n      <div className=\"spinner\">\n        <LoadingOutlined />\n        <div className=\"label\">Loading</div>\n      </div>\n    </div>\n  )\n\n}\n\nexport default HouseLoading;","import { useState } from 'react';\nimport { Image } from 'antd';\n\nconst ImageList = props => {\n\n  const [ current, setCurrent ] = useState();\n\n  const { title, description } = current ? current.directus_files_id : {};\n\n  return (\n    <>\n      { props.images.map(img => \n        <Image\n          key={img.id} \n          width={200} \n          src={`${process.env.REACT_APP_API_URL}/assets/${img.directus_files_id.id}?width=200&height=200`}\n          preview={{ \n            src: `${process.env.REACT_APP_API_URL}/assets/${img.directus_files_id.id}?width=1200`,\n            onVisibleChange: visible => visible ? setCurrent(img) : setCurrent()\n          }} />\n      )}\n\n      { (title || description) && \n        <div className=\"image-caption-wrapper\">\n          <div className=\"image-caption\">\n            { title && <h4>{ title }</h4> }\n            { description && <p>{ description }</p>}\n          </div>\n        </div>\n      }\n    </>\n  )\n  \n}\n\nexport default ImageList;","import { Tooltip } from 'antd';\nimport { Link } from 'react-router-dom';\nimport { HomeOutlined, SearchOutlined } from '@ant-design/icons';\n\nconst Navbar = props => {\n\n  return (\n    <nav style={{ backgroundImage: 'url(\"/logo_navbar.png\")' }}>\n      <Link className=\"nav-item-wrapper\" to=\"/search\">\n        <div className=\"nav-item\">\n          <Tooltip title=\"Search\">\n            <SearchOutlined />\n            <span>Search</span>\n          </Tooltip>\n        </div>\n      </Link>\n\n      <Link className=\"nav-item-wrapper\" to=\"/\">\n        <div className=\"nav-item\">\n          <Tooltip title=\"Home\">\n            <HomeOutlined />\n            <span>Home</span>\n          </Tooltip>\n        </div>\n      </Link>\n    </nav>\n  )\n\n}\n\nexport default Navbar;","import { useState } from 'react';\nimport { Switch, Tooltip } from 'antd';\nimport { MapContainer, TileLayer, Marker } from 'react-leaflet';\nimport { HomeOutlined, HourglassOutlined, CopyOutlined } from '@ant-design/icons';\nimport ReactMarkdown from 'react-markdown';\nimport copy from 'copy-html-to-clipboard';\nimport ImageList from './ImageList';\nimport Navbar from '../Navbar';\n\nimport './House.scss';\n\nconst BASEMAPS = {\n  street: 'https://server.arcgisonline.com/ArcGIS/rest/services/World_Street_Map/MapServer/tile/{z}/{y}/{x}',\n  aerial: 'https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}'\n}\n\nconst buildCitation = props => {\n  \n  const port = window.location.port ? `:${window.location.port}` : '';\n\n  const permalink = `${window.location.protocol}//${window.location.hostname}${port}/house/${props.id}`;\n\n  return (\n    <span>\n      { props.user_created.last_name }, { props.user_created.first_name.substring(0, 1) }\n      ., \"{ props.house_name }\", Tetrastylon, {new Date(props.date_updated).getUTCFullYear()}\n      , <a href={permalink}>{permalink}</a>.\n    </span>\n  )\n}\n\nconst copyToClipboard = () => {\n  const el = document.querySelector('.section.cite-as p');\n\n  copy(el.innerHTML, {\n    asHtml: true,\n  });\n}\n\nconst HouseLoaded = props => {\n\n  const [ basemap, setBasemap ] = useState(BASEMAPS.street);\n\n  const imageIds = props.images.map(img => img.directus_files_id);\n\n  const backgroundImage = imageIds.length > 0 ? `url('${process.env.REACT_APP_API_URL}/assets/${imageIds[0].id}?width=1400&height=600')` : null; \n\n  const location = [ props.latitude, props.longitude ];\n\n  const onToggleBasemap = useAerial => useAerial ? \n    setBasemap(BASEMAPS.aerial) : setBasemap(BASEMAPS.street);\n\n  return (\n    <div className=\"house loaded\">\n      <header>\n        <Navbar />\n\n        <div className=\"jumbo\" style={{ backgroundImage }}>\n          <div className=\"jumbo-contents\">\n            <h1>{ props.house_name }</h1>          \n            <h2>{ props.city }</h2>\n          </div>\n\n          <div>\n            <div className=\"mini-map\">\n              <MapContainer center={location} zoom={5} zoomControl={false} attributionControl={false}>\n                {/* Forces a redraw. Kind of an odd hack to account for the fact that TileLayer is immutable */}\n                { basemap == BASEMAPS.street && <TileLayer url={basemap} /> }\n                { basemap == BASEMAPS.aerial && <TileLayer url={basemap} /> }\n                <Marker position={location} />\n              </MapContainer>\n              \n              <div className=\"layer-toggle\">\n                <Switch \n                  onChange={onToggleBasemap} \n                  checkedChildren=\"SATELLITE\"\n                  unCheckedChildren=\"STREET\" />\n              </div>\n            </div>  \n          </div>\n        </div>\n      </header>\n\n      <main>\n        <div className=\"section key-properties\">\n          <ul>\n            <li>\n              <HomeOutlined /> { props.number_of_rooms } Rooms, { parseFloat(props.house_dimensions).toFixed() } m²\n            </li>\n            <li>\n              { props.building_phases && <>\n                <HourglassOutlined /> { props.building_phases } Building Phase{props.building_phases.length > 0 && 's'}\n              </>}\n            </li>\n            <li>\n              <label>Constructed</label> {props.construction_date }\n            </li>\n            <li>\n              <label>Abandonded</label> { props.abandon_date }\n            </li>\n          </ul>\n        </div>\n\n        <div className=\"section description\">\n          <h3>Description</h3>\n          <ReactMarkdown>{ props.house_description }</ReactMarkdown>  \n        </div>\n\n        <div className=\"section\">\n          <h3>Dating of Phases</h3>\n          <ReactMarkdown>{ props.dating_of_phases }</ReactMarkdown>\n        </div>\n\n        <div className=\"section\">\n          <h3>Situation of Entrance</h3>\n          <ReactMarkdown>{ props.situation_of_entrance }</ReactMarkdown>\n        </div>\n        \n        <div className=\"section\">\n          <h3>Representation Room Typology</h3>\n          <ReactMarkdown>{ props.representation_room_typology }</ReactMarkdown>\n        </div>\n\n        <div className=\"section atrium\">\n          <h3>Atrium</h3>\n          <ReactMarkdown>{ props.atrium_typology }</ReactMarkdown>\n          { props.atrium_typology && props.atrium_extension ? ', ' : ''} \n          { props.atrium_extension && `${parseFloat(props.atrium_extension).toFixed()} m²` }\n          { !(props.atrium_extension || props.atrium_typology) && '-' }\n        </div>\n\n        <div className=\"section\">\n          <h3>Impluvium Extension</h3>\n          { props.impluvium_extension ? `${parseFloat(props.impluvium_extension).toFixed()} m²` : '-' }\n        </div>\n\n        <div className=\"section\">\n          <h3>Other Uncovered Spaces</h3>\n          <ReactMarkdown>{ props.other_uncovered_spaces }</ReactMarkdown>\n        </div>\n\n        { props.comments && \n          <div className=\"section\">\n            <h3>Comments</h3>\n            <ReactMarkdown>{ props.comments }</ReactMarkdown>\n          </div>\n        }\n\n        { props.images.length > 0 &&\n          <div className=\"section images\">\n            <h3>Images</h3>\n            <ImageList images={props.images} />\n          </div>\n        }\n\n        { props.plans_of_the_house.length > 0 &&\n          <div className=\"section plans\">\n            <h3>Plans of the House</h3>\n            <ImageList images={props.plans_of_the_house} />\n          </div>\n        }\n\n        { props.interesting_links && props.interesting_links.length > 0 &&\n          <div className=\"section links\">\n            <h3>Interesting Links</h3>\n            <ul>\n              { props.interesting_links.map(link => \n                <li key={link.id}>\n                  <a href={link.url} target=\"_blank\">{ link.description }</a>\n                </li>\n              )}\n            </ul>\n          </div>\n        }\n\n        <div className=\"section bibliography\">\n          <h3>Bibliography</h3>\n          <ReactMarkdown>{ props.bibliography }</ReactMarkdown>\n        </div>\n\n        <div className=\"section cite-as\" >\n          <h3>Cite as</h3>\n          <p>\n            { buildCitation(props) }\n            <Tooltip title=\"Copy to Clipboard\">\n              <CopyOutlined className=\"copy\" onClick={copyToClipboard} />\n            </Tooltip>\n          </p>\n        </div>\n      </main>\n    </div>\n  )\n\n}\n\nexport default HouseLoaded;","import useSWR from 'swr';\nimport HouseError from './HouseError';\nimport HouseLoading from './HouseLoading';\nimport HouseLoaded from './HouseLoaded';\n\nconst fetcher = url => fetch(url).then(r => r.json());\n\nconst House = props => {\n\n  const { houseId } = props.match.params;\n\n  const { data, error } = useSWR(`${process.env.REACT_APP_API_URL}/items/house/${houseId}?fields=*,*.*,*.*.id,*.*.title,*.*.description`, fetcher);\n\n  if (error) {\n    return <HouseError />\n  } else if (data) {\n    return <HouseLoaded {...data.data } />\n  } else {\n    return <HouseLoading />\n  }\n\n}\n\nexport default House;","import { Image, Spin, Table } from 'antd';\nimport { Link } from 'react-router-dom';\nimport { LoadingOutlined } from '@ant-design/icons';\n\nimport './Search.scss';\n\nconst getImageSrc = result => \n  result.images?.length > 0 ?\n    `${process.env.REACT_APP_API_URL}/assets/${result.images[0].directus_files_id.id}?width=120&height=120` : null; // TODO fallback\n\nconst SearchResultsLoaded = props => {\n\n  const { data } = props;\n\n  const rows = data && data.map(r => ({\n    key: r.id,\n    image: getImageSrc(r),\n    house_name: r.house_name,\n    city: r.city,\n    constructed: { text: r.construction_date, numeric: r.construction_date_numeric },\n    abandonded: { text: r.abandon_date, numeric: r.abandon_date_numeric },\n    dimensions: r.house_dimensions,\n    complete_plan: r.complete_plan\n  }));\n\n  return (\n    <Table \n      loading={ props.loading && { indicator: <Spin indicator={ <LoadingOutlined /> } /> }}\n      dataSource={rows} \n      pagination={false}>\n\n      <Table.Column title=\"\" dataIndex=\"image\" render={src => \n        <Image src={src} preview={false} /> \n      }/>\n\n      <Table.Column title=\"House Name\" dataIndex=\"house_name\" render={(name, record) => \n        <Link to={`/house/${record.key}`}>{name}</Link>\n      }/>\n\n      <Table.Column title=\"City\" dataIndex=\"city\" />\n      <Table.Column title=\"Constructed\" dataIndex={['constructed', 'text']} />\n      <Table.Column title=\"Abandonded\" dataIndex={['abandonded', 'text']} />\n    </Table>\n  )\n\n}\n\nexport default SearchResultsLoaded;","const SearchResultsError = props => {\n\n  return (\n    <div>Error</div>\n  )\n\n}\n\nexport default SearchResultsError;","import { useState } from 'react';\nimport { ApolloProvider, useQuery, gql } from '@apollo/client';\nimport { Input } from 'antd';\nimport Navbar from '../Navbar';\nimport SearchResults from './SearchResults';\nimport SearchResultsError from './SearchResultsError';\n\nconst buildQuery = query => gql`\n  query {\n    items {\n      house(search: \"${query}\", limit: 100) {\n        id,\n        house_name,\n        city,\n        latitude,\n        longitude,\n        construction_date,\n        construction_date_numeric,\n        abandon_date,\n        abandon_date_numeric,\n        complete_plan,\n        house_dimensions,\n        cistern,\n        images {\n          id,\n          directus_files_id {\n            id\n          }\n        }\n      }\n    }\n  }`;\n\nconst Search = props => {\n\n  const [ query, setQuery ] = useState();\n\n  return (\n    <div className=\"search\">\n      <header>\n        <Navbar />\n      </header>\n      \n      <main>\n        <div className=\"search-bar\">\n          <Input.Search \n            placeholder=\"Search...\" \n            allowClear \n            size=\"large\"\n            onSearch={value => setQuery(value)} />\n        </div>\n        \n        <div className=\"search-results\">\n          { query && \n            <SearchResultsContainer query={query} /> \n          }\n        </div>\n      </main>\n    </div>\n  )\n\n}\n\nfunction SearchResultsContainer(props) {\n\n  const { loading, error, data } = useQuery(buildQuery(props.query));\n\n  if (loading)\n    return <SearchResults loading={true} />\n  else if (error)\n    return <SearchResultsError />\n  else \n    return <SearchResults data={data.items.house} />\n\n}\n\nexport default Search;\n","const MapView = props => {\n\n  return (\n    <h1>Map</h1>\n  )\n\n}\n\nexport default MapView;","import './SplashPage.scss';\n\nconst SplashPage = props => {\n\n  return (\n    <div className=\"splash-page\">\n      <section className=\"splash-header\">\n        <h1>\n          <img src=\"/logo_splash.png\" alt=\"Tetrastylon Project\" />\n        </h1>\n\n        <h2 className=\"eu-project-no\">\n          EU project 747466\n        </h2>\n      </section>\n\n      <section \n        className=\"deco-image\" \n        style={{ backgroundImage: \"url('/atri_des_d_oest.jpg')\" }}>\n\n        <h3 className=\"sub-heading\">\n          The Tetrastyle Courtyard House <br/> \n          of the Western Roman Empire Cities\n        </h3>\n      </section>\n\n      <footer>\n\n      </footer>\n    </div>\n  )\n\n}\n\nexport default SplashPage;","import House from './house/House';\nimport Search from './search/Search';\nimport MapView from './map/MapView';\nimport SplashPage from './splash/SplashPage';\nimport { \n  BrowserRouter as Router, \n  Switch, \n  Route\n} from 'react-router-dom';\n\nimport './App.scss';\n\nfunction App() {\n\n  return (\n    <Router>      \n      <Switch>\n        <Route path=\"/search\" component={Search} />\n        \n        <Route path=\"/house/:houseId\" component={House} />\n\n        <Route path=\"/map\">\n          <MapView />\n        </Route>\n\n\n        <Route path=\"/\">\n          <SplashPage />\n        </Route>\n      </Switch>\n    </Router>\n  );\n\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { ApolloClient, ApolloProvider, InMemoryCache } from '@apollo/client';\nimport App from './App';\n\nimport 'antd/dist/antd.css';\n\nconst client = new ApolloClient({\n  uri: `${process.env.REACT_APP_API_URL}/graphql`,\n  cache: new InMemoryCache({\n    typePolicies: {\n      items: {\n        //  Cf.https://www.apollographql.com/docs/react/caching/cache-configuration/#generating-unique-identifiers\n        keyFields: []\n      }\n    }\n  })\n});\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <App />\n  </ApolloProvider>,\n  document.getElementById('app')\n);\n"],"sourceRoot":""}
{"version":3,"sources":["house/HouseError.jsx","house/HouseLoading.jsx","Navbar.jsx","house/HouseLoaded.jsx","house/House.jsx","search/SearchResults.jsx","search/SearchResultsError.jsx","search/Search.jsx","map/MapView.jsx","App.js","index.js"],"names":["HouseError","HouseLoading","className","LoadingOutlined","Navbar","props","style","backgroundImage","to","title","SearchOutlined","HomeOutlined","BASEMAPS","buildCitation","port","window","location","permalink","protocol","hostname","id","user_created","last_name","first_name","substring","house_name","Date","date_updated","getUTCFullYear","href","copyToClipboard","el","document","querySelector","copy","innerHTML","asHtml","HouseLoaded","useState","basemap","imageIds","images","map","img","directus_files_id","length","process","latitude","longitude","city","MapContainer","center","zoom","zoomControl","attributionControl","TileLayer","url","Marker","position","number_of_rooms","parseFloat","house_dimensions","toFixed","building_phases","HourglassOutlined","construction_date","abandon_date","house_description","dating_of_phases","situation_of_entrance","representation_room_typology","atrium_typology","atrium_extension","impluvium_extension","other_uncovered_spaces","comments","PreviewGroup","width","src","preview","plans_of_the_house","interesting_links","link","target","description","bibliography","CopyOutlined","onClick","fetcher","fetch","then","r","json","House","houseId","match","params","useSWR","data","error","getImageSrc","result","SearchResultsLoaded","rows","key","image","constructed","text","numeric","construction_date_numeric","abandonded","abandon_date_numeric","dimensions","complete_plan","loading","indicator","dataSource","pagination","Column","dataIndex","render","name","record","SearchResultsError","client","ApolloClient","uri","cache","InMemoryCache","typePolicies","items","keyFields","SearchResultsContainer","query","useQuery","gql","SearchResults","house","Search","setQuery","placeholder","allowClear","size","onSearch","value","MapView","App","path","component","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.5255fd17.chunk.js","sourcesContent":["const HouseError = () => {\n\n  return (\n    <div>Error!</div>\n  )\n\n}\n\nexport default HouseError;","import { LoadingOutlined } from '@ant-design/icons';\n\nconst HouseLoading = () => {\n\n  return (\n    <div className=\"house loading\">\n      <div className=\"spinner\">\n        <LoadingOutlined />\n        <div className=\"label\">Loading</div>\n      </div>\n    </div>\n  )\n\n}\n\nexport default HouseLoading;","import { Tooltip } from 'antd';\nimport { Link } from 'react-router-dom';\nimport { HomeOutlined, SearchOutlined } from '@ant-design/icons';\n\nconst Navbar = props => {\n\n  return (\n    <nav style={{ backgroundImage: 'url(\"/logo_navbar.png\")' }}>\n      <Link className=\"nav-item-wrapper\" to=\"/search\">\n        <div className=\"nav-item\">\n          <Tooltip title=\"Search\">\n            <SearchOutlined />\n            <span>Search</span>\n          </Tooltip>\n        </div>\n      </Link>\n\n      <Link className=\"nav-item-wrapper\" to=\"/\">\n        <div className=\"nav-item\">\n          <Tooltip title=\"Home\">\n            <HomeOutlined />\n            <span>Home</span>\n          </Tooltip>\n        </div>\n      </Link>\n    </nav>\n  )\n\n}\n\nexport default Navbar;","import { useState } from 'react';\nimport { Image, Tooltip } from 'antd';\nimport { MapContainer, TileLayer, Marker } from 'react-leaflet';\nimport { HomeOutlined, HourglassOutlined, CopyOutlined } from '@ant-design/icons';\nimport ReactMarkdown from 'react-markdown';\nimport copy from 'copy-html-to-clipboard';\nimport Navbar from '../Navbar';\n\nimport './House.scss';\n\nconst BASEMAPS = {\n  street: 'https://server.arcgisonline.com/ArcGIS/rest/services/World_Street_Map/MapServer/tile/{z}/{y}/{x}',\n  aerial: 'https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}'\n}\n\nconst buildCitation = props => {\n  \n  const port = window.location.port ? `:${window.location.port}` : '';\n\n  const permalink = `${window.location.protocol}//${window.location.hostname}${port}/house/${props.id}`;\n\n  return (\n    <span>\n      { props.user_created.last_name }, { props.user_created.first_name.substring(0, 1) }\n      ., \"{ props.house_name }\", Tetrastylon, {new Date(props.date_updated).getUTCFullYear()}\n      , <a href={permalink}>{permalink}</a>.\n    </span>\n  )\n}\n\nconst copyToClipboard = () => {\n  const el = document.querySelector('.section.cite-as p');\n\n  copy(el.innerHTML, {\n    asHtml: true,\n  });\n}\n\nconst HouseLoaded = props => {\n\n  const [ basemap, setBasemap ] = useState(BASEMAPS.street);\n\n  const imageIds = props.images.map(img => img.directus_files_id);\n\n  const backgroundImage = imageIds.length > 0 ? `url('${process.env.REACT_APP_API_URL}/assets/${imageIds[0]}?width=1400&height=600')` : null; \n\n  const location = [ props.latitude, props.longitude ];\n\n  return (\n    <div className=\"house loaded\">\n      <header>\n        <Navbar />\n\n        <div className=\"jumbo\" style={{ backgroundImage }}>\n          <div className=\"jumbo-contents\">\n            <h1>{ props.house_name }</h1>          \n            <h2>{ props.city }</h2>\n          </div>\n\n          <div>\n            <div className=\"mini-map\">\n              <MapContainer center={location} zoom={5} zoomControl={false} attributionControl={false}>\n                <TileLayer url={basemap} />\n                <Marker position={location} />\n              </MapContainer>\n            </div>  \n          </div>\n        </div>\n      </header>\n\n      <main>\n        <div className=\"section key-properties\">\n          <ul>\n            <li>\n              <HomeOutlined /> { props.number_of_rooms } Rooms, { parseFloat(props.house_dimensions).toFixed() } m²\n            </li>\n            <li>\n              { props.building_phases && <>\n                <HourglassOutlined /> { props.building_phases } Building Phase{props.building_phases.length > 0 && 's'}\n              </>}\n            </li>\n            <li>\n              <label>Constructed</label> {props.construction_date }\n            </li>\n            <li>\n              <label>Abandonded</label> { props.abandon_date }\n            </li>\n          </ul>\n        </div>\n\n        <div className=\"section description\">\n          <h3>Description</h3>\n          <ReactMarkdown>{ props.house_description }</ReactMarkdown>  \n        </div>\n\n        <div className=\"section\">\n          <h3>Dating of Phases</h3>\n          <ReactMarkdown>{ props.dating_of_phases }</ReactMarkdown>\n        </div>\n\n        <div className=\"section\">\n          <h3>Situation of Entrance</h3>\n          <ReactMarkdown>{ props.situation_of_entrance }</ReactMarkdown>\n        </div>\n        \n        <div className=\"section\">\n          <h3>Representation Room Typology</h3>\n          <ReactMarkdown>{ props.representation_room_typology }</ReactMarkdown>\n        </div>\n\n        <div className=\"section atrium\">\n          <h3>Atrium</h3>\n          <ReactMarkdown>{ props.atrium_typology }</ReactMarkdown>\n          { props.atrium_typology && props.atrium_extension ? ', ' : ''} \n          { props.atrium_extension && `${parseFloat(props.atrium_extension).toFixed()} m²` }\n          { !(props.atrium_extension || props.atrium_typology) && '-' }\n        </div>\n\n        <div className=\"section\">\n          <h3>Impluvium Extension</h3>\n          { props.impluvium_extension ? `${parseFloat(props.impluvium_extension).toFixed()} m²` : '-' }\n        </div>\n\n        <div className=\"section\">\n          <h3>Other Uncovered Spaces</h3>\n          <ReactMarkdown>{ props.other_uncovered_spaces }</ReactMarkdown>\n        </div>\n\n        { props.comments && \n          <div className=\"section\">\n            <h3>Comments</h3>\n            <ReactMarkdown>{ props.comments }</ReactMarkdown>\n          </div>\n        }\n\n        { props.images.length > 0 &&\n          <div className=\"section images\">\n            <h3>Images</h3>\n            <Image.PreviewGroup>\n              { props.images.map(img => \n                <Image \n                  key={img.id} \n                  width={200} \n                  src={`${process.env.REACT_APP_API_URL}/assets/${img.directus_files_id}?width=200&height=200`}\n                  preview={{ src:`${process.env.REACT_APP_API_URL}/assets/${img.directus_files_id}?width=1200` }} />\n              )}\n            </Image.PreviewGroup>\n          </div>\n        }\n\n        { props.plans_of_the_house.length > 0 &&\n          <div className=\"section plans\">\n            <h3>Plans of the House</h3>\n            <Image.PreviewGroup>\n              { props.plans_of_the_house.map(img => \n                <Image \n                  key={img.id} \n                  width={200} \n                  src={`${process.env.REACT_APP_API_URL}/assets/${img.directus_files_id}?width=200&height=200`}\n                  preview={{ src:`${process.env.REACT_APP_API_URL}/assets/${img.directus_files_id}?width=1200` }} />\n              )}\n            </Image.PreviewGroup>\n          </div>\n        }\n\n        { props.interesting_links && props.interesting_links.length > 0 &&\n          <div className=\"section links\">\n            <h3>Interesting Links</h3>\n            <ul>\n              { props.interesting_links.map(link => \n                <li key={link.id}>\n                  <a href={link.url} target=\"_blank\">{ link.description }</a>\n                </li>\n              )}\n            </ul>\n          </div>\n        }\n\n        <div className=\"section bibliography\">\n          <h3>Bibliography</h3>\n          <ReactMarkdown>{ props.bibliography }</ReactMarkdown>\n        </div>\n\n        <div className=\"section cite-as\" >\n          <h3>Cite as</h3>\n          <p>\n            { buildCitation(props) }\n            <Tooltip title=\"Copy to Clipboard\">\n              <CopyOutlined className=\"copy\" onClick={copyToClipboard} />\n            </Tooltip>\n          </p>\n        </div>\n      </main>\n    </div>\n  )\n\n}\n\nexport default HouseLoaded;","import HouseError from './HouseError';\nimport HouseLoading from './HouseLoading';\nimport HouseLoaded from './HouseLoaded';\nimport useSWR from 'swr';\n\nconst fetcher = url => fetch(url).then(r => r.json());\n\nconst House = props => {\n\n  const { houseId } = props.match.params;\n\n  const { data, error } = useSWR(`${process.env.REACT_APP_API_URL}/items/house/${houseId}?fields=*,*.*`, fetcher);\n\n  if (error) {\n    return <HouseError />\n  } else if (data) {\n    return <HouseLoaded {...data.data } />\n  } else {\n    return <HouseLoading />\n  }\n\n}\n\nexport default House;","import { Image, Spin, Table } from 'antd';\nimport { Link } from 'react-router-dom';\nimport { LoadingOutlined } from '@ant-design/icons';\n\nimport './Search.scss';\n\nconst getImageSrc = result => \n  result.images?.length > 0 ?\n    `${process.env.REACT_APP_API_URL}/assets/${result.images[0].directus_files_id.id}?width=120&height=120` : null; // TODO fallback\n\nconst SearchResultsLoaded = props => {\n\n  const { data } = props;\n\n  const rows = data && data.map(r => ({\n    key: r.id,\n    image: getImageSrc(r),\n    house_name: r.house_name,\n    city: r.city,\n    constructed: { text: r.construction_date, numeric: r.construction_date_numeric },\n    abandonded: { text: r.abandon_date, numeric: r.abandon_date_numeric },\n    dimensions: r.house_dimensions,\n    complete_plan: r.complete_plan\n  }));\n\n  return (\n    <Table \n      loading={ props.loading && { indicator: <Spin indicator={ <LoadingOutlined /> } /> }}\n      dataSource={rows} \n      pagination={false}>\n\n      <Table.Column title=\"\" dataIndex=\"image\" render={src => \n        <Image src={src} preview={false} /> \n      }/>\n\n      <Table.Column title=\"House Name\" dataIndex=\"house_name\" render={(name, record) => \n        <Link to={`/house/${record.key}`}>{name}</Link>\n      }/>\n\n      <Table.Column title=\"City\" dataIndex=\"city\" />\n      <Table.Column title=\"Constructed\" dataIndex={['constructed', 'text']} />\n      <Table.Column title=\"Abandonded\" dataIndex={['abandonded', 'text']} />\n    </Table>\n  )\n\n}\n\nexport default SearchResultsLoaded;","const SearchResultsError = props => {\n\n  return (\n    <div>Error</div>\n  )\n\n}\n\nexport default SearchResultsError;","import { useState } from 'react';\nimport { ApolloClient, ApolloProvider, InMemoryCache, useQuery, gql } from '@apollo/client';\nimport { Input } from 'antd';\nimport Navbar from '../Navbar';\nimport SearchResults from './SearchResults';\nimport SearchResultsError from './SearchResultsError';\n\nconst client = new ApolloClient({\n  uri: `${process.env.REACT_APP_API_URL}/graphql`,\n  cache: new InMemoryCache({\n    typePolicies: {\n      items: {\n        //  Cf.https://www.apollographql.com/docs/react/caching/cache-configuration/#generating-unique-identifiers\n        keyFields: []\n      }\n    }\n  })\n});\n\nconst buildQuery = query => gql`\n  query {\n    items {\n      house(search: \"${query}\", limit: 100) {\n        id,\n        house_name,\n        city,\n        latitude,\n        longitude,\n        construction_date,\n        construction_date_numeric,\n        abandon_date,\n        abandon_date_numeric,\n        complete_plan,\n        house_dimensions,\n        cistern,\n        images {\n          id,\n          directus_files_id {\n            id\n          }\n        }\n      }\n    }\n  }`;\n\nconst Search = props => {\n\n  const [ query, setQuery ] = useState();\n\n  return (\n    <div className=\"search\">\n      <header>\n        <Navbar />\n      </header>\n      \n      <main>\n        <div className=\"search-bar\">\n          <Input.Search \n            placeholder=\"Search...\" \n            allowClear \n            size=\"large\"\n            onSearch={value => setQuery(value)} />\n        </div>\n        \n        <div className=\"search-results\">\n          <ApolloProvider client={client}>\n            { query && \n              <SearchResultsContainer query={query} /> \n            }\n          </ApolloProvider>\n        </div>\n      </main>\n    </div>\n  )\n\n}\n\nfunction SearchResultsContainer(props) {\n\n  const { loading, error, data } = useQuery(buildQuery(props.query));\n\n  if (loading)\n    return <SearchResults loading={true} />\n  else if (error)\n    return <SearchResultsError />\n  else \n    return <SearchResults data={data.items.house} />\n\n}\n\nexport default Search;\n","const MapView = props => {\n\n  return (\n    <h1>Map</h1>\n  )\n\n}\n\nexport default MapView;","import House from './house/House';\nimport Search from './search/Search';\nimport MapView from './map/MapView';\n\nimport { \n  BrowserRouter as Router, \n  Link,\n  Switch, \n  Route\n} from 'react-router-dom';\n\nimport './App.scss';\n\nfunction App() {\n\n  return (\n    <Router>      \n      <Switch>\n        <Route path=\"/search\" component={Search} />\n        \n        <Route path=\"/house/:houseId\" component={House} />\n\n        <Route path=\"/map\">\n          <MapView />\n        </Route>\n\n\n        <Route path=\"/\">\n          <p>\n            Future site of the Tetrastylon DB interface. Nothing to see yet.\n          </p>\n\n          <Link to=\"/house/65dcf6b5-d0a4-45c9-a466-c072d1351c93\">Example house</Link>\n        </Route>\n      </Switch>\n    </Router>\n  );\n\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nimport 'antd/dist/antd.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('app')\n);\n"],"sourceRoot":""}
{"version":3,"sources":["house/HouseError.jsx","house/HouseLoading.jsx","house/HouseLoaded.jsx","house/House.jsx","map/MapView.jsx","App.js","index.js"],"names":["HouseError","HouseLoading","buildCitation","props","permalink","process","id","user_created","last_name","first_name","substring","house_name","Date","date_updated","getUTCFullYear","href","HouseLoaded","imageIds","images","map","img","directus_files_id","backgroundImage","length","location","latitude","longitude","className","style","city","MapContainer","center","zoom","zoomControl","attributionControl","TileLayer","url","Marker","position","class","HomeOutlined","number_of_rooms","parseFloat","house_dimensions","toFixed","HourglassOutlined","building_phases","construction_date","abandon_date","house_description","dating_of_phases","representation_room_typology","situation_of_entrance","other_uncovered_spaces","PreviewGroup","width","src","preview","plans_of_the_house","fetcher","fetch","then","r","json","House","houseId","match","params","useSWR","data","error","MapView","App","path","component","to","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f2cabbe0.chunk.js","sourcesContent":["const HouseError = () => {\n\n  return (\n    <div>Error!</div>\n  )\n\n}\n\nexport default HouseError;","const HouseLoading = () => {\n\n  return (\n    <div>Loading...</div>\n  )\n\n}\n\nexport default HouseLoading;","import { Image } from 'antd';\nimport { MapContainer, TileLayer, Marker } from 'react-leaflet';\nimport { HomeOutlined, HourglassOutlined } from '@ant-design/icons';\nimport ReactMarkdown from 'react-markdown';\n\nimport './House.scss';\n\nconst buildCitation = props => {\n  \n  const permalink = `${process.env.REACT_APP_API_URL}/house/${props.id}`;\n\n  return (\n    <span>\n      { props.user_created.last_name }, { props.user_created.first_name.substring(0, 1) }\n      ., \"{ props.house_name }\", Tetrastylon, {new Date(props.date_updated).getUTCFullYear()}\n      , <a href={permalink}>{permalink}</a>.\n    </span>\n  )\n}\n\nconst HouseLoaded = props => {\n\n  const imageIds = props.images.map(img => img.directus_files_id);\n\n  const backgroundImage = imageIds.length > 0 ? `url('${process.env.REACT_APP_API_URL}/assets/${imageIds[0]}?width=1400&height=600')` : null; \n\n  const location = [ props.latitude, props.longitude ];\n\n  return (\n    <div className=\"house loaded\">\n      <header className=\"jumbo\" style={{ backgroundImage }}>\n        <div className=\"jumbo-contents\">\n          <h1>{ props.house_name }</h1>          \n          <h2>{ props.city }</h2>\n        </div>\n\n        <div>\n          <div className=\"mini-map\">\n            <MapContainer center={location} zoom={5} zoomControl={false} attributionControl={false}>\n              <TileLayer url=\"https://server.arcgisonline.com/ArcGIS/rest/services/World_Street_Map/MapServer/tile/{z}/{y}/{x}\" />\n              <Marker position={location} />\n            </MapContainer>\n          </div>  \n        </div>\n      </header>\n\n      <main>\n        <div class=\"section key-properties\">\n          <ul>\n            <li>\n              <HomeOutlined /> { props.number_of_rooms } Rooms, { parseFloat(props.house_dimensions).toFixed() } mÂ²\n            </li>\n            <li>\n              <HourglassOutlined /> { props.building_phases } Building Phases\n            </li>\n            <li>\n              <label>Constructed</label> {props.construction_date }\n            </li>\n            <li>\n              <label>Abandonded</label> { props.abandon_date }\n            </li>\n          </ul>\n        </div>\n\n        <div className=\"section description\">\n          <h3>Description</h3>\n          <ReactMarkdown>{ props.house_description }</ReactMarkdown>  \n        </div>\n\n        <div className=\"section\">\n          <h3>Dating of Phases</h3>\n          <ReactMarkdown>{ props.dating_of_phases }</ReactMarkdown>\n        </div>\n\n        <div className=\"section\">\n          <h3>Representation Room Typology</h3>\n          <ReactMarkdown>{ props.representation_room_typology }</ReactMarkdown>\n        </div>\n\n        <div className=\"section\">\n          <h3>Situation of Entrance</h3>\n          <ReactMarkdown>{ props.situation_of_entrance }</ReactMarkdown>\n        </div>\n\n        <div className=\"section\">\n          <h3>Other Uncovered Spaces</h3>\n          <ReactMarkdown>{ props.other_uncovered_spaces }</ReactMarkdown>\n        </div>\n\n        { props.images.length > 0 &&\n          <div className=\"section images\">\n            <h3>Images</h3>\n            <Image.PreviewGroup>\n              { props.images.map(img => \n                <Image \n                  key={img.id} \n                  width={200} \n                  src={`${process.env.REACT_APP_API_URL}/assets/${img.directus_files_id}?width=200&height=200`}\n                  preview={{ src:`${process.env.REACT_APP_API_URL}/assets/${img.directus_files_id}?width=1200` }} />\n              )}\n            </Image.PreviewGroup>\n          </div>\n        }\n\n        { props.plans_of_the_house.length > 0 &&\n          <div className=\"section plans\">\n            <h3>Plans of the House</h3>\n            <Image.PreviewGroup>\n              { props.plans_of_the_house.map(img => \n                <Image \n                  key={img.id} \n                  width={200} \n                  src={`${process.env.REACT_APP_API_URL}/assets/${img.directus_files_id}?width=200&height=200`}\n                  preview={{ src:`${process.env.REACT_APP_API_URL}/assets/${img.directus_files_id}?width=1200` }} />\n              )}\n            </Image.PreviewGroup>\n          </div>\n        }\n\n        <div className=\"section cite-as\">\n          <h3>Cite as</h3>\n          <p>\n            { buildCitation(props) }\n          </p>\n        </div>\n      </main>\n    </div>\n  )\n\n}\n\nexport default HouseLoaded;","import HouseError from './HouseError';\nimport HouseLoading from './HouseLoading';\nimport HouseLoaded from './HouseLoaded';\n\nimport useSWR from 'swr';\n\nconst fetcher = url => fetch(url).then(r => r.json());\n\nconst House = props => {\n\n  const { houseId } = props.match.params;\n\n  const { data, error } = useSWR(`${process.env.REACT_APP_API_URL}/items/house/${houseId}?fields=*,*.*`, fetcher);\n\n  if (error) {\n    return <HouseError />\n  } else if (data) {\n    return <HouseLoaded {...data.data } />\n  } else {\n    return <HouseLoading />\n  }\n\n}\n\nexport default House;","const MapView = props => {\n\n  return (\n    <h1>Map</h1>\n  )\n\n}\n\nexport default MapView;","import House from './house/House';\nimport MapView from './map/MapView';\nimport { \n  BrowserRouter as Router, \n  Link,\n  Switch, \n  Route\n} from 'react-router-dom';\n\nimport './App.scss';\n\nfunction App() {\n\n  return (\n    <Router>      \n      <Switch>\n        <Route path=\"/map\">\n          <MapView />\n        </Route>\n\n        <Route path=\"/house/:houseId\" component={House} />\n\n        <Route path=\"/\">\n          <p>\n            Future site of the Tetrastylon DB interface. Nothing to see yet.\n          </p>\n\n          <Link to=\"/house/65dcf6b5-d0a4-45c9-a466-c072d1351c93\">Example house</Link>\n        </Route>\n      </Switch>\n    </Router>\n  );\n\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nimport 'antd/dist/antd.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('app')\n);\n"],"sourceRoot":""}
{"version":3,"sources":["house/HouseError.jsx","house/HouseLoading.jsx","house/HouseLoaded.jsx","house/House.jsx","search/SearchResultsLoading.jsx","search/SearchResultsError.jsx","search/SearchResultsLoaded.jsx","search/Search.jsx","map/MapView.jsx","App.js","index.js"],"names":["HouseError","HouseLoading","buildCitation","props","port","window","location","permalink","protocol","hostname","id","user_created","last_name","first_name","substring","house_name","Date","date_updated","getUTCFullYear","href","copyToClipboard","el","document","querySelector","copy","innerHTML","asHtml","HouseLoaded","imageIds","images","map","img","directus_files_id","backgroundImage","length","process","latitude","longitude","className","style","city","MapContainer","center","zoom","zoomControl","attributionControl","TileLayer","url","Marker","position","HomeOutlined","number_of_rooms","parseFloat","house_dimensions","toFixed","HourglassOutlined","building_phases","construction_date","abandon_date","house_description","dating_of_phases","situation_of_entrance","representation_room_typology","atrium_extension","atrium_typology","impluvium_extension","other_uncovered_spaces","comments","PreviewGroup","width","src","preview","plans_of_the_house","interesting_links","link","target","description","bibliography","CopyOutlined","onClick","fetcher","fetch","then","r","json","House","houseId","match","params","useSWR","data","error","SearchResultsLoading","SearchResultsError","SearchResultsLoaded","getImageSrc","result","rows","key","image","constructed","text","numeric","construction_date_numeric","abandonded","abandon_date_numeric","dimensions","complete_plan","dataSource","pagination","onRow","row","evt","console","log","Column","title","dataIndex","render","client","ApolloClient","uri","cache","InMemoryCache","typePolicies","items","keyFields","SearchResults","query","useQuery","gql","loading","house","Search","useState","setQuery","placeholder","allowClear","size","onSearch","value","page","MapView","App","path","component","to","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.a432d7ed.chunk.js","sourcesContent":["const HouseError = () => {\n\n  return (\n    <div>Error!</div>\n  )\n\n}\n\nexport default HouseError;","const HouseLoading = () => {\n\n  return (\n    <div>Loading...</div>\n  )\n\n}\n\nexport default HouseLoading;","import { Image } from 'antd';\nimport { MapContainer, TileLayer, Marker } from 'react-leaflet';\nimport { HomeOutlined, HourglassOutlined, CopyOutlined } from '@ant-design/icons';\nimport ReactMarkdown from 'react-markdown';\nimport copy from 'copy-html-to-clipboard';\n\nimport './House.scss';\n\nconst buildCitation = props => {\n  \n  const port = window.location.port ? `:${window.location.port}` : '';\n\n  const permalink = `${window.location.protocol}//${window.location.hostname}${port}/house/${props.id}`;\n\n  return (\n    <span>\n      { props.user_created.last_name }, { props.user_created.first_name.substring(0, 1) }\n      ., \"{ props.house_name }\", Tetrastylon, {new Date(props.date_updated).getUTCFullYear()}\n      , <a href={permalink}>{permalink}</a>.\n    </span>\n  )\n}\n\nconst copyToClipboard = () => {\n  const el = document.querySelector('.section.cite-as p');\n\n  copy(el.innerHTML, {\n    asHtml: true,\n  });\n}\n\nconst HouseLoaded = props => {\n\n  const imageIds = props.images.map(img => img.directus_files_id);\n\n  const backgroundImage = imageIds.length > 0 ? `url('${process.env.REACT_APP_API_URL}/assets/${imageIds[0]}?width=1400&height=600')` : null; \n\n  const location = [ props.latitude, props.longitude ];\n\n  return (\n    <div className=\"house loaded\">\n      <header className=\"jumbo\" style={{ backgroundImage }}>\n        <div className=\"jumbo-contents\">\n          <h1>{ props.house_name }</h1>          \n          <h2>{ props.city }</h2>\n        </div>\n\n        <div>\n          <div className=\"mini-map\">\n            <MapContainer center={location} zoom={5} zoomControl={false} attributionControl={false}>\n              <TileLayer url=\"https://server.arcgisonline.com/ArcGIS/rest/services/World_Street_Map/MapServer/tile/{z}/{y}/{x}\" />\n              <Marker position={location} />\n            </MapContainer>\n          </div>  \n        </div>\n      </header>\n\n      <main>\n        <div className=\"section key-properties\">\n          <ul>\n            <li>\n              <HomeOutlined /> { props.number_of_rooms } Rooms, { parseFloat(props.house_dimensions).toFixed() } mÂ²\n            </li>\n            <li>\n              <HourglassOutlined /> { props.building_phases } Building Phases\n            </li>\n            <li>\n              <label>Constructed</label> {props.construction_date }\n            </li>\n            <li>\n              <label>Abandonded</label> { props.abandon_date }\n            </li>\n          </ul>\n        </div>\n\n        <div className=\"section description\">\n          <h3>Description</h3>\n          <ReactMarkdown>{ props.house_description }</ReactMarkdown>  \n        </div>\n\n        <div className=\"section\">\n          <h3>Dating of Phases</h3>\n          <ReactMarkdown>{ props.dating_of_phases }</ReactMarkdown>\n        </div>\n\n        <div className=\"section\">\n          <h3>Situation of Entrance</h3>\n          <ReactMarkdown>{ props.situation_of_entrance }</ReactMarkdown>\n        </div>\n        \n        <div className=\"section\">\n          <h3>Representation Room Typology</h3>\n          <ReactMarkdown>{ props.representation_room_typology }</ReactMarkdown>\n        </div>\n\n        <div className=\"section atrium\">\n          <h3>Atrium</h3>\n          { parseFloat(props.atrium_extension).toFixed() } mÂ²\n          { props.atrium_typology ? ', ' : ''} <ReactMarkdown>{ props.atrium_typology }</ReactMarkdown>\n        </div>\n\n        <div className=\"section\">\n          <h3>Impluvium Extension</h3>\n          { parseFloat(props.impluvium_extension).toFixed() } mÂ²\n        </div>\n\n        <div className=\"section\">\n          <h3>Other Uncovered Spaces</h3>\n          <ReactMarkdown>{ props.other_uncovered_spaces }</ReactMarkdown>\n        </div>\n\n        { props.comments && \n          <div className=\"section\">\n            <h3>Comments</h3>\n            <ReactMarkdown>{ props.comments }</ReactMarkdown>\n          </div>\n        }\n\n        { props.images.length > 0 &&\n          <div className=\"section images\">\n            <h3>Images</h3>\n            <Image.PreviewGroup>\n              { props.images.map(img => \n                <Image \n                  key={img.id} \n                  width={200} \n                  src={`${process.env.REACT_APP_API_URL}/assets/${img.directus_files_id}?width=200&height=200`}\n                  preview={{ src:`${process.env.REACT_APP_API_URL}/assets/${img.directus_files_id}?width=1200` }} />\n              )}\n            </Image.PreviewGroup>\n          </div>\n        }\n\n        { props.plans_of_the_house.length > 0 &&\n          <div className=\"section plans\">\n            <h3>Plans of the House</h3>\n            <Image.PreviewGroup>\n              { props.plans_of_the_house.map(img => \n                <Image \n                  key={img.id} \n                  width={200} \n                  src={`${process.env.REACT_APP_API_URL}/assets/${img.directus_files_id}?width=200&height=200`}\n                  preview={{ src:`${process.env.REACT_APP_API_URL}/assets/${img.directus_files_id}?width=1200` }} />\n              )}\n            </Image.PreviewGroup>\n          </div>\n        }\n\n        { props.interesting_links && props.interesting_links.length > 0 &&\n          <div className=\"section links\">\n            <h3>Interesting Links</h3>\n            <ul>\n              { props.interesting_links.map(link => \n                <li key={link.id}>\n                  <a href={link.url} target=\"_blank\">{ link.description }</a>\n                </li>\n              )}\n            </ul>\n          </div>\n        }\n\n        <div className=\"section bibliography\">\n          <h3>Bibliography</h3>\n          <ReactMarkdown>{ props.bibliography }</ReactMarkdown>\n        </div>\n\n        <div className=\"section cite-as\" >\n          <h3>Cite as</h3>\n          <p>\n            { buildCitation(props) }\n            <CopyOutlined className=\"copy\" onClick={copyToClipboard} />\n          </p>\n        </div>\n      </main>\n    </div>\n  )\n\n}\n\nexport default HouseLoaded;","import HouseError from './HouseError';\nimport HouseLoading from './HouseLoading';\nimport HouseLoaded from './HouseLoaded';\nimport useSWR from 'swr';\n\nconst fetcher = url => fetch(url).then(r => r.json());\n\nconst House = props => {\n\n  const { houseId } = props.match.params;\n\n  const { data, error } = useSWR(`${process.env.REACT_APP_API_URL}/items/house/${houseId}?fields=*,*.*`, fetcher);\n\n  if (error) {\n    return <HouseError />\n  } else if (data) {\n    return <HouseLoaded {...data.data } />\n  } else {\n    return <HouseLoading />\n  }\n\n}\n\nexport default House;","const SearchResultsLoading = props => {\n\n  return (\n    <div>Loading...</div>\n  )\n\n}\n\nexport default SearchResultsLoading;","const SearchResultsError = props => {\n\n  return (\n    <div>Error</div>\n  )\n\n}\n\nexport default SearchResultsError;","import { Image, Table } from 'antd';\n\nimport './Search.scss';\n\nconst SearchResultsLoaded = props => {\n\n  const { data } = props;\n\n  const getImageSrc = result => \n    result.images?.length > 0 ?\n      `${process.env.REACT_APP_API_URL}/assets/${result.images[0].directus_files_id.id}?width=80&height=80` : null; // TODO fallback\n\n  const rows = data.map(r => ({\n    key: r.id,\n    image: getImageSrc(r),\n    house_name: r.house_name,\n    city: r.city,\n    constructed: { text: r.construction_date, numeric: r.construction_date_numeric },\n    abandonded: { text: r.abandon_date, numeric: r.abandon_date_numeric },\n    dimensions: r.house_dimensions,\n    complete_plan: r.complete_plan\n  }));\n\n  const onClick = row => {\n    console.log(row);\n  }\n\n  return (\n    <Table \n      dataSource={rows} \n      pagination={false}\n      onRow={row => ({ onClick: evt => onClick(row)}) } >\n\n      <Table.Column title=\"\" dataIndex=\"image\" render={src => \n        <Image src={src} preview={false} /> \n      }/>\n      <Table.Column title=\"House Name\" dataIndex=\"house_name\" />\n      <Table.Column title=\"City\" dataIndex=\"city\" />\n      <Table.Column title=\"Constructed\" dataIndex={['constructed', 'text']} />\n      <Table.Column title=\"Abandonded\" dataIndex={['abandonded', 'text']} />\n    </Table>\n  )\n\n}\n\nexport default SearchResultsLoaded;","import { useState } from 'react';\nimport { ApolloClient, ApolloProvider, InMemoryCache, useQuery, gql } from '@apollo/client';\nimport { Input } from 'antd';\nimport SearchResultsLoading from './SearchResultsLoading';\nimport SearchResultsError from './SearchResultsError';\nimport SearchResultsLoaded from './SearchResultsLoaded';\n\nimport './Search.scss';\n\nconst client = new ApolloClient({\n  uri: `${process.env.REACT_APP_API_URL}/graphql`,\n  cache: new InMemoryCache({\n    typePolicies: {\n      items: {\n        //  Cf.https://www.apollographql.com/docs/react/caching/cache-configuration/#generating-unique-identifiers\n        keyFields: []\n      }\n    }\n  })\n});\n\nconst buildQuery = query => gql`\n  query {\n    items {\n      house(search: \"${query}\", limit: 100) {\n        id,\n        house_name,\n        city,\n        latitude,\n        longitude,\n        construction_date,\n        construction_date_numeric,\n        abandon_date,\n        abandon_date_numeric,\n        complete_plan,\n        house_dimensions,\n        cistern,\n        images {\n          id,\n          directus_files_id {\n            id\n          }\n        }\n      }\n    }\n  }`;\n\nconst Search = props => {\n\n  const [ query, setQuery ] = useState();\n\n  return (\n    <div className=\"search\">\n      <div className=\"search-bar\">\n        <Input.Search \n          placeholder=\"Search...\" \n          allowClear \n          size=\"large\"\n          onSearch={value => setQuery(value)} />\n      </div>\n      \n      <div className=\"search-results\">\n        <ApolloProvider client={client}>\n          { query && <SearchResults query={query} page={1} /> }\n        </ApolloProvider>\n      </div>\n    </div>\n  )\n\n}\n\nfunction SearchResults(props) {\n\n  const { loading, error, data } = useQuery(buildQuery(props.query));\n\n  if (loading)\n    return <SearchResultsLoading />\n  else if (error)\n    return <SearchResultsError />\n  else \n    return <SearchResultsLoaded data={data.items.house} />\n\n}\n\nexport default Search;\n","const MapView = props => {\n\n  return (\n    <h1>Map</h1>\n  )\n\n}\n\nexport default MapView;","import House from './house/House';\nimport Search from './search/Search';\nimport MapView from './map/MapView';\n\nimport { \n  BrowserRouter as Router, \n  Link,\n  Switch, \n  Route\n} from 'react-router-dom';\n\nimport './App.scss';\n\nfunction App() {\n\n  return (\n    <Router>      \n      <Switch>\n        <Route path=\"/search\" component={Search} />\n        \n        <Route path=\"/house/:houseId\" component={House} />\n\n        <Route path=\"/map\">\n          <MapView />\n        </Route>\n\n\n        <Route path=\"/\">\n          <p>\n            Future site of the Tetrastylon DB interface. Nothing to see yet.\n          </p>\n\n          <Link to=\"/house/65dcf6b5-d0a4-45c9-a466-c072d1351c93\">Example house</Link>\n        </Route>\n      </Switch>\n    </Router>\n  );\n\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nimport 'antd/dist/antd.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('app')\n);\n"],"sourceRoot":""}
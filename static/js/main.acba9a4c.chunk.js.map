{"version":3,"sources":["house/HouseError.jsx","house/HouseLoading.jsx","house/ImageList.jsx","Navbar.jsx","house/HouseLoaded.jsx","house/House.jsx","search/SearchResults.jsx","search/SearchResultsError.jsx","search/Search.jsx","map/MapView.jsx","App.js","index.js"],"names":["HouseError","HouseLoading","className","LoadingOutlined","ImageList","props","useState","isPreviewOpen","setIsPreviewOpen","current","setCurrent","images","map","img","src","process","directus_files_id","id","thumb","useEffect","switchLeft","document","getElementsByClassName","switchRight","getCurrentIdx","currentSrcs","Array","from","el","getAttribute","indexOf","find","includes","onSwitchLeft","Math","max","onSwitchRight","min","length","addEventListener","removeEventListener","console","log","title","description","PreviewGroup","preview","onVisibleChange","visible","width","Navbar","style","backgroundImage","to","SearchOutlined","HomeOutlined","BASEMAPS","buildCitation","port","window","location","permalink","protocol","hostname","user_created","last_name","first_name","substring","house_name","Date","date_updated","getUTCFullYear","href","copyToClipboard","querySelector","copy","innerHTML","asHtml","HouseLoaded","basemap","setBasemap","imageIds","latitude","longitude","city","MapContainer","center","zoom","zoomControl","attributionControl","TileLayer","url","Marker","position","onChange","useAerial","checkedChildren","unCheckedChildren","number_of_rooms","parseFloat","house_dimensions","toFixed","building_phases","HourglassOutlined","construction_date","abandon_date","house_description","dating_of_phases","situation_of_entrance","representation_room_typology","atrium_typology","atrium_extension","impluvium_extension","other_uncovered_spaces","comments","plans_of_the_house","interesting_links","link","target","bibliography","CopyOutlined","onClick","fetcher","fetch","then","r","json","House","houseId","match","params","useSWR","data","error","getImageSrc","result","SearchResultsLoaded","rows","key","image","constructed","text","numeric","construction_date_numeric","abandonded","abandon_date_numeric","dimensions","complete_plan","loading","indicator","dataSource","pagination","Column","dataIndex","render","name","record","SearchResultsError","SearchResultsContainer","query","useQuery","gql","SearchResults","items","house","Search","setQuery","placeholder","allowClear","size","onSearch","value","MapView","App","path","component","client","ApolloClient","uri","cache","InMemoryCache","typePolicies","keyFields","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.acba9a4c.chunk.js","sourcesContent":["const HouseError = () => {\n\n  return (\n    <div>Error!</div>\n  )\n\n}\n\nexport default HouseError;","import { LoadingOutlined } from '@ant-design/icons';\n\nconst HouseLoading = () => {\n\n  return (\n    <div className=\"house loading\">\n      <div className=\"spinner\">\n        <LoadingOutlined />\n        <div className=\"label\">Loading</div>\n      </div>\n    </div>\n  )\n\n}\n\nexport default HouseLoading;","import { useEffect, useState } from 'react';\nimport { Image } from 'antd';\n\nconst ImageList = props => {\n\n  const [ isPreviewOpen, setIsPreviewOpen ] = useState(false);\n\n  const [ current, setCurrent ] = useState(-1);\n\n  const images = props.images.map(img => ({\n    ...img,\n    src: `${process.env.REACT_APP_API_URL}/assets/${img.directus_files_id.id}?width=1200`,\n    thumb: `${process.env.REACT_APP_API_URL}/assets/${img.directus_files_id.id}?width=200&height=200`,\n  }));\n\n  useEffect(() => {\n    const switchLeft = document.getElementsByClassName('ant-image-preview-switch-left')[0];\n    const switchRight = document.getElementsByClassName('ant-image-preview-switch-right')[0];\n\n    const getCurrentIdx = () => {\n      const currentSrcs = Array.from(document.getElementsByClassName('ant-image-preview-img'))\n        .map(el => el.getAttribute('src'));\n\n      return images.indexOf(images.find(img => currentSrcs.includes(img.src)));\n    }\n\n    if (switchLeft && switchRight) {\n      setCurrent(getCurrentIdx());\n\n      const onSwitchLeft = () =>\n        setCurrent(Math.max(0, getCurrentIdx() - 1));\n\n      const onSwitchRight = () =>\n        setCurrent(Math.min(getCurrentIdx() + 1, images.length - 1));\n \n      switchLeft.addEventListener('click', onSwitchLeft);\n      switchRight.addEventListener('click', onSwitchRight);\n\n      return () => {\n        switchLeft.removeEventListener('click', onSwitchLeft);\n        switchRight.removeEventListener('click', onSwitchRight);  \n      }\n    } else {\n      setCurrent(-1);\n    }\n  }, [ isPreviewOpen ]);\n\n  console.log(images, current);\n\n  const { title, description } = (isPreviewOpen && images && current > -1) ? images[current].directus_files_id : {};\n\n  return (\n    <>\n      <Image.PreviewGroup \n        preview={{ onVisibleChange: visible => setIsPreviewOpen(visible) }} >\n\n        { images.map(img => \n          <Image\n            key={img.id} \n            width={200} \n            src={img.thumb}\n            preview={{ src: img.src }} />\n        )}\n\n      </Image.PreviewGroup>\n      { (title || description) && \n        <div className=\"image-caption-wrapper\">\n          <div className=\"image-caption\">\n            { title && <h4>{ title }</h4> }\n            { description && <p>{ description }</p>}\n          </div>\n        </div>\n      }\n    </>\n  )\n  \n}\n\nexport default ImageList;","import { Tooltip } from 'antd';\nimport { Link } from 'react-router-dom';\nimport { HomeOutlined, SearchOutlined } from '@ant-design/icons';\n\nconst Navbar = props => {\n\n  return (\n    <nav style={{ backgroundImage: 'url(\"/logo_navbar.png\")' }}>\n      <Link className=\"nav-item-wrapper\" to=\"/search\">\n        <div className=\"nav-item\">\n          <Tooltip title=\"Search\">\n            <SearchOutlined />\n            <span>Search</span>\n          </Tooltip>\n        </div>\n      </Link>\n\n      <Link className=\"nav-item-wrapper\" to=\"/\">\n        <div className=\"nav-item\">\n          <Tooltip title=\"Home\">\n            <HomeOutlined />\n            <span>Home</span>\n          </Tooltip>\n        </div>\n      </Link>\n    </nav>\n  )\n\n}\n\nexport default Navbar;","import { useState } from 'react';\nimport { Switch, Tooltip } from 'antd';\nimport { MapContainer, TileLayer, Marker } from 'react-leaflet';\nimport { HomeOutlined, HourglassOutlined, CopyOutlined } from '@ant-design/icons';\nimport ReactMarkdown from 'react-markdown';\nimport copy from 'copy-html-to-clipboard';\nimport ImageList from './ImageList';\nimport Navbar from '../Navbar';\n\nimport './House.scss';\n\nconst BASEMAPS = {\n  street: 'https://server.arcgisonline.com/ArcGIS/rest/services/World_Street_Map/MapServer/tile/{z}/{y}/{x}',\n  aerial: 'https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}'\n}\n\nconst buildCitation = props => {\n  \n  const port = window.location.port ? `:${window.location.port}` : '';\n\n  const permalink = `${window.location.protocol}//${window.location.hostname}${port}/house/${props.id}`;\n\n  return (\n    <span>\n      { props.user_created.last_name }, { props.user_created.first_name.substring(0, 1) }\n      ., \"{ props.house_name }\", Tetrastylon, {new Date(props.date_updated).getUTCFullYear()}\n      , <a href={permalink}>{permalink}</a>.\n    </span>\n  )\n}\n\nconst copyToClipboard = () => {\n  const el = document.querySelector('.section.cite-as p');\n\n  copy(el.innerHTML, {\n    asHtml: true,\n  });\n}\n\nconst HouseLoaded = props => {\n\n  const [ basemap, setBasemap ] = useState(BASEMAPS.street);\n\n  const imageIds = props.images.map(img => img.directus_files_id);\n\n  const backgroundImage = imageIds.length > 0 ? `url('${process.env.REACT_APP_API_URL}/assets/${imageIds[0].id}?width=1400&height=600')` : null; \n\n  const location = [ props.latitude, props.longitude ];\n\n  const onToggleBasemap = useAerial => useAerial ? \n    setBasemap(BASEMAPS.aerial) : setBasemap(BASEMAPS.street);\n\n  return (\n    <div className=\"house loaded\">\n      <header>\n        <Navbar />\n\n        <div className=\"jumbo\" style={{ backgroundImage }}>\n          <div className=\"jumbo-contents\">\n            <h1>{ props.house_name }</h1>          \n            <h2>{ props.city }</h2>\n          </div>\n\n          <div>\n            <div className=\"mini-map\">\n              <MapContainer center={location} zoom={5} zoomControl={false} attributionControl={false}>\n                {/* Forces a redraw. Kind of an odd hack to account for the fact that TileLayer is immutable */}\n                { basemap == BASEMAPS.street && <TileLayer url={basemap} /> }\n                { basemap == BASEMAPS.aerial && <TileLayer url={basemap} /> }\n                <Marker position={location} />\n              </MapContainer>\n              \n              <div className=\"layer-toggle\">\n                <Switch \n                  onChange={onToggleBasemap} \n                  checkedChildren=\"SATELLITE\"\n                  unCheckedChildren=\"STREET\" />\n              </div>\n            </div>  \n          </div>\n        </div>\n      </header>\n\n      <main>\n        <div className=\"section key-properties\">\n          <ul>\n            <li>\n              <HomeOutlined /> { props.number_of_rooms } Rooms, { parseFloat(props.house_dimensions).toFixed() } m²\n            </li>\n            <li>\n              { props.building_phases && <>\n                <HourglassOutlined /> { props.building_phases } Building Phase{props.building_phases.length > 0 && 's'}\n              </>}\n            </li>\n            <li>\n              <label>Constructed</label> {props.construction_date }\n            </li>\n            <li>\n              <label>Abandonded</label> { props.abandon_date }\n            </li>\n          </ul>\n        </div>\n\n        <div className=\"section description\">\n          <h3>Description</h3>\n          <ReactMarkdown>{ props.house_description }</ReactMarkdown>  \n        </div>\n\n        <div className=\"section\">\n          <h3>Dating of Phases</h3>\n          <ReactMarkdown>{ props.dating_of_phases }</ReactMarkdown>\n        </div>\n\n        <div className=\"section\">\n          <h3>Situation of Entrance</h3>\n          <ReactMarkdown>{ props.situation_of_entrance }</ReactMarkdown>\n        </div>\n        \n        <div className=\"section\">\n          <h3>Representation Room Typology</h3>\n          <ReactMarkdown>{ props.representation_room_typology }</ReactMarkdown>\n        </div>\n\n        <div className=\"section atrium\">\n          <h3>Atrium</h3>\n          <ReactMarkdown>{ props.atrium_typology }</ReactMarkdown>\n          { props.atrium_typology && props.atrium_extension ? ', ' : ''} \n          { props.atrium_extension && `${parseFloat(props.atrium_extension).toFixed()} m²` }\n          { !(props.atrium_extension || props.atrium_typology) && '-' }\n        </div>\n\n        <div className=\"section\">\n          <h3>Impluvium Extension</h3>\n          { props.impluvium_extension ? `${parseFloat(props.impluvium_extension).toFixed()} m²` : '-' }\n        </div>\n\n        <div className=\"section\">\n          <h3>Other Uncovered Spaces</h3>\n          <ReactMarkdown>{ props.other_uncovered_spaces }</ReactMarkdown>\n        </div>\n\n        { props.comments && \n          <div className=\"section\">\n            <h3>Comments</h3>\n            <ReactMarkdown>{ props.comments }</ReactMarkdown>\n          </div>\n        }\n\n        { props.images.length > 0 &&\n          <div className=\"section images\">\n            <h3>Images</h3>\n            <ImageList images={props.images} />\n          </div>\n        }\n\n        { props.plans_of_the_house.length > 0 &&\n          <div className=\"section plans\">\n            <h3>Plans of the House</h3>\n            <ImageList images={props.plans_of_the_house} />\n          </div>\n        }\n\n        { props.interesting_links && props.interesting_links.length > 0 &&\n          <div className=\"section links\">\n            <h3>Interesting Links</h3>\n            <ul>\n              { props.interesting_links.map(link => \n                <li key={link.id}>\n                  <a href={link.url} target=\"_blank\">{ link.description }</a>\n                </li>\n              )}\n            </ul>\n          </div>\n        }\n\n        <div className=\"section bibliography\">\n          <h3>Bibliography</h3>\n          <ReactMarkdown>{ props.bibliography }</ReactMarkdown>\n        </div>\n\n        <div className=\"section cite-as\" >\n          <h3>Cite as</h3>\n          <p>\n            { buildCitation(props) }\n            <Tooltip title=\"Copy to Clipboard\">\n              <CopyOutlined className=\"copy\" onClick={copyToClipboard} />\n            </Tooltip>\n          </p>\n        </div>\n      </main>\n    </div>\n  )\n\n}\n\nexport default HouseLoaded;","import useSWR from 'swr';\nimport HouseError from './HouseError';\nimport HouseLoading from './HouseLoading';\nimport HouseLoaded from './HouseLoaded';\n\nconst fetcher = url => fetch(url).then(r => r.json());\n\nconst House = props => {\n\n  const { houseId } = props.match.params;\n\n  const { data, error } = useSWR(`${process.env.REACT_APP_API_URL}/items/house/${houseId}?fields=*,*.*,*.*.id,*.*.title,*.*.description`, fetcher);\n\n  if (error) {\n    return <HouseError />\n  } else if (data) {\n    return <HouseLoaded {...data.data } />\n  } else {\n    return <HouseLoading />\n  }\n\n}\n\nexport default House;","import { Image, Spin, Table } from 'antd';\nimport { Link } from 'react-router-dom';\nimport { LoadingOutlined } from '@ant-design/icons';\n\nimport './Search.scss';\n\nconst getImageSrc = result => \n  result.images?.length > 0 ?\n    `${process.env.REACT_APP_API_URL}/assets/${result.images[0].directus_files_id.id}?width=120&height=120` : null; // TODO fallback\n\nconst SearchResultsLoaded = props => {\n\n  const { data } = props;\n\n  const rows = data && data.map(r => ({\n    key: r.id,\n    image: getImageSrc(r),\n    house_name: r.house_name,\n    city: r.city,\n    constructed: { text: r.construction_date, numeric: r.construction_date_numeric },\n    abandonded: { text: r.abandon_date, numeric: r.abandon_date_numeric },\n    dimensions: r.house_dimensions,\n    complete_plan: r.complete_plan\n  }));\n\n  return (\n    <Table \n      loading={ props.loading && { indicator: <Spin indicator={ <LoadingOutlined /> } /> }}\n      dataSource={rows} \n      pagination={false}>\n\n      <Table.Column title=\"\" dataIndex=\"image\" render={src => \n        <Image src={src} preview={false} /> \n      }/>\n\n      <Table.Column title=\"House Name\" dataIndex=\"house_name\" render={(name, record) => \n        <Link to={`/house/${record.key}`}>{name}</Link>\n      }/>\n\n      <Table.Column title=\"City\" dataIndex=\"city\" />\n      <Table.Column title=\"Constructed\" dataIndex={['constructed', 'text']} />\n      <Table.Column title=\"Abandonded\" dataIndex={['abandonded', 'text']} />\n    </Table>\n  )\n\n}\n\nexport default SearchResultsLoaded;","const SearchResultsError = props => {\n\n  return (\n    <div>Error</div>\n  )\n\n}\n\nexport default SearchResultsError;","import { useState } from 'react';\nimport { ApolloProvider, useQuery, gql } from '@apollo/client';\nimport { Input } from 'antd';\nimport Navbar from '../Navbar';\nimport SearchResults from './SearchResults';\nimport SearchResultsError from './SearchResultsError';\n\nconst buildQuery = query => gql`\n  query {\n    items {\n      house(search: \"${query}\", limit: 100) {\n        id,\n        house_name,\n        city,\n        latitude,\n        longitude,\n        construction_date,\n        construction_date_numeric,\n        abandon_date,\n        abandon_date_numeric,\n        complete_plan,\n        house_dimensions,\n        cistern,\n        images {\n          id,\n          directus_files_id {\n            id\n          }\n        }\n      }\n    }\n  }`;\n\nconst Search = props => {\n\n  const [ query, setQuery ] = useState();\n\n  return (\n    <div className=\"search\">\n      <header>\n        <Navbar />\n      </header>\n      \n      <main>\n        <div className=\"search-bar\">\n          <Input.Search \n            placeholder=\"Search...\" \n            allowClear \n            size=\"large\"\n            onSearch={value => setQuery(value)} />\n        </div>\n        \n        <div className=\"search-results\">\n          { query && \n            <SearchResultsContainer query={query} /> \n          }\n        </div>\n      </main>\n    </div>\n  )\n\n}\n\nfunction SearchResultsContainer(props) {\n\n  const { loading, error, data } = useQuery(buildQuery(props.query));\n\n  if (loading)\n    return <SearchResults loading={true} />\n  else if (error)\n    return <SearchResultsError />\n  else \n    return <SearchResults data={data.items.house} />\n\n}\n\nexport default Search;\n","const MapView = props => {\n\n  return (\n    <h1>Map</h1>\n  )\n\n}\n\nexport default MapView;","import House from './house/House';\nimport Search from './search/Search';\nimport MapView from './map/MapView';\n\nimport { \n  BrowserRouter as Router, \n  Link,\n  Switch, \n  Route\n} from 'react-router-dom';\n\nimport './App.scss';\n\nfunction App() {\n\n  return (\n    <Router>      \n      <Switch>\n        <Route path=\"/search\" component={Search} />\n        \n        <Route path=\"/house/:houseId\" component={House} />\n\n        <Route path=\"/map\">\n          <MapView />\n        </Route>\n\n\n        <Route path=\"/\">\n          <p>\n            Future site of the Tetrastylon DB interface. Nothing to see yet.\n          </p>\n\n          <Link to=\"/house/65dcf6b5-d0a4-45c9-a466-c072d1351c93\">Example house</Link>\n        </Route>\n      </Switch>\n    </Router>\n  );\n\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { ApolloClient, ApolloProvider, InMemoryCache } from '@apollo/client';\nimport App from './App';\n\nimport 'antd/dist/antd.css';\n\nconst client = new ApolloClient({\n  uri: `${process.env.REACT_APP_API_URL}/graphql`,\n  cache: new InMemoryCache({\n    typePolicies: {\n      items: {\n        //  Cf.https://www.apollographql.com/docs/react/caching/cache-configuration/#generating-unique-identifiers\n        keyFields: []\n      }\n    }\n  })\n});\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <App />\n  </ApolloProvider>,\n  document.getElementById('app')\n);\n"],"sourceRoot":""}
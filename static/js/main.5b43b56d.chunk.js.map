{"version":3,"sources":["house/HouseError.jsx","house/HouseLoading.jsx","Navbar.jsx","house/HouseLoaded.jsx","house/House.jsx","search/SearchResults.jsx","search/SearchResultsError.jsx","search/Search.jsx","map/MapView.jsx","App.js","index.js"],"names":["HouseError","HouseLoading","Navbar","props","style","backgroundImage","className","title","SearchOutlined","HomeOutlined","buildCitation","port","window","location","permalink","protocol","hostname","id","user_created","last_name","first_name","substring","house_name","Date","date_updated","getUTCFullYear","href","copyToClipboard","el","document","querySelector","copy","innerHTML","asHtml","HouseLoaded","imageIds","images","map","img","directus_files_id","length","process","latitude","longitude","city","MapContainer","center","zoom","zoomControl","attributionControl","TileLayer","url","Marker","position","number_of_rooms","parseFloat","house_dimensions","toFixed","HourglassOutlined","building_phases","construction_date","abandon_date","house_description","dating_of_phases","situation_of_entrance","representation_room_typology","atrium_extension","atrium_typology","impluvium_extension","other_uncovered_spaces","comments","PreviewGroup","width","src","preview","plans_of_the_house","interesting_links","link","target","description","bibliography","CopyOutlined","onClick","fetcher","fetch","then","r","json","House","houseId","match","params","useSWR","data","error","getImageSrc","result","SearchResultsLoaded","history","useHistory","rows","key","image","constructed","text","numeric","construction_date_numeric","abandonded","abandon_date_numeric","dimensions","complete_plan","loading","indicator","LoadingOutlined","dataSource","pagination","onRow","row","evt","push","Column","dataIndex","render","SearchResultsError","client","ApolloClient","uri","cache","InMemoryCache","typePolicies","items","keyFields","SearchResultsContainer","query","useQuery","gql","SearchResults","house","Search","useState","setQuery","placeholder","allowClear","size","onSearch","value","MapView","App","path","component","to","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.5b43b56d.chunk.js","sourcesContent":["const HouseError = () => {\n\n  return (\n    <div>Error!</div>\n  )\n\n}\n\nexport default HouseError;","const HouseLoading = () => {\n\n  return (\n    <div>Loading...</div>\n  )\n\n}\n\nexport default HouseLoading;","import { Tooltip } from 'antd';\nimport { HomeOutlined, SearchOutlined } from '@ant-design/icons';\n\nconst Navbar = props => {\n\n  return (\n    <nav style={{ backgroundImage: 'url(\"/logo_navbar.png\")' }}>\n      <div className=\"nav-item-wrapper\">\n        <div className=\"nav-item\">\n          <Tooltip title=\"Search\">\n            <SearchOutlined />\n            <label>Search</label>\n          </Tooltip>\n        </div>\n      </div>\n\n      <div className=\"nav-item-wrapper\">\n        <div className=\"nav-item\">\n          <Tooltip title=\"Home\">\n            <HomeOutlined />\n            <label>Home</label>\n          </Tooltip>\n        </div>\n      </div>\n    </nav>\n  )\n\n}\n\nexport default Navbar;","import { Image } from 'antd';\nimport { MapContainer, TileLayer, Marker } from 'react-leaflet';\nimport { HomeOutlined, HourglassOutlined, CopyOutlined } from '@ant-design/icons';\nimport ReactMarkdown from 'react-markdown';\nimport copy from 'copy-html-to-clipboard';\nimport Navbar from '../Navbar';\n\nimport './House.scss';\n\nconst buildCitation = props => {\n  \n  const port = window.location.port ? `:${window.location.port}` : '';\n\n  const permalink = `${window.location.protocol}//${window.location.hostname}${port}/house/${props.id}`;\n\n  return (\n    <span>\n      { props.user_created.last_name }, { props.user_created.first_name.substring(0, 1) }\n      ., \"{ props.house_name }\", Tetrastylon, {new Date(props.date_updated).getUTCFullYear()}\n      , <a href={permalink}>{permalink}</a>.\n    </span>\n  )\n}\n\nconst copyToClipboard = () => {\n  const el = document.querySelector('.section.cite-as p');\n\n  copy(el.innerHTML, {\n    asHtml: true,\n  });\n}\n\nconst HouseLoaded = props => {\n\n  const imageIds = props.images.map(img => img.directus_files_id);\n\n  const backgroundImage = imageIds.length > 0 ? `url('${process.env.REACT_APP_API_URL}/assets/${imageIds[0]}?width=1400&height=600')` : null; \n\n  const location = [ props.latitude, props.longitude ];\n\n  return (\n    <div className=\"house loaded\">\n      <header>\n        <Navbar />\n\n        <div className=\"jumbo\" style={{ backgroundImage }}>\n          <div className=\"jumbo-contents\">\n            <h1>{ props.house_name }</h1>          \n            <h2>{ props.city }</h2>\n          </div>\n\n          <div>\n            <div className=\"mini-map\">\n              <MapContainer center={location} zoom={5} zoomControl={false} attributionControl={false}>\n                <TileLayer url=\"https://server.arcgisonline.com/ArcGIS/rest/services/World_Street_Map/MapServer/tile/{z}/{y}/{x}\" />\n                <Marker position={location} />\n              </MapContainer>\n            </div>  \n          </div>\n        </div>\n      </header>\n\n      <main>\n        <div className=\"section key-properties\">\n          <ul>\n            <li>\n              <HomeOutlined /> { props.number_of_rooms } Rooms, { parseFloat(props.house_dimensions).toFixed() } m²\n            </li>\n            <li>\n              <HourglassOutlined /> { props.building_phases } Building Phases\n            </li>\n            <li>\n              <label>Constructed</label> {props.construction_date }\n            </li>\n            <li>\n              <label>Abandonded</label> { props.abandon_date }\n            </li>\n          </ul>\n        </div>\n\n        <div className=\"section description\">\n          <h3>Description</h3>\n          <ReactMarkdown>{ props.house_description }</ReactMarkdown>  \n        </div>\n\n        <div className=\"section\">\n          <h3>Dating of Phases</h3>\n          <ReactMarkdown>{ props.dating_of_phases }</ReactMarkdown>\n        </div>\n\n        <div className=\"section\">\n          <h3>Situation of Entrance</h3>\n          <ReactMarkdown>{ props.situation_of_entrance }</ReactMarkdown>\n        </div>\n        \n        <div className=\"section\">\n          <h3>Representation Room Typology</h3>\n          <ReactMarkdown>{ props.representation_room_typology }</ReactMarkdown>\n        </div>\n\n        <div className=\"section atrium\">\n          <h3>Atrium</h3>\n          { parseFloat(props.atrium_extension).toFixed() } m²\n          { props.atrium_typology ? ', ' : ''} <ReactMarkdown>{ props.atrium_typology }</ReactMarkdown>\n        </div>\n\n        <div className=\"section\">\n          <h3>Impluvium Extension</h3>\n          { parseFloat(props.impluvium_extension).toFixed() } m²\n        </div>\n\n        <div className=\"section\">\n          <h3>Other Uncovered Spaces</h3>\n          <ReactMarkdown>{ props.other_uncovered_spaces }</ReactMarkdown>\n        </div>\n\n        { props.comments && \n          <div className=\"section\">\n            <h3>Comments</h3>\n            <ReactMarkdown>{ props.comments }</ReactMarkdown>\n          </div>\n        }\n\n        { props.images.length > 0 &&\n          <div className=\"section images\">\n            <h3>Images</h3>\n            <Image.PreviewGroup>\n              { props.images.map(img => \n                <Image \n                  key={img.id} \n                  width={200} \n                  src={`${process.env.REACT_APP_API_URL}/assets/${img.directus_files_id}?width=200&height=200`}\n                  preview={{ src:`${process.env.REACT_APP_API_URL}/assets/${img.directus_files_id}?width=1200` }} />\n              )}\n            </Image.PreviewGroup>\n          </div>\n        }\n\n        { props.plans_of_the_house.length > 0 &&\n          <div className=\"section plans\">\n            <h3>Plans of the House</h3>\n            <Image.PreviewGroup>\n              { props.plans_of_the_house.map(img => \n                <Image \n                  key={img.id} \n                  width={200} \n                  src={`${process.env.REACT_APP_API_URL}/assets/${img.directus_files_id}?width=200&height=200`}\n                  preview={{ src:`${process.env.REACT_APP_API_URL}/assets/${img.directus_files_id}?width=1200` }} />\n              )}\n            </Image.PreviewGroup>\n          </div>\n        }\n\n        { props.interesting_links && props.interesting_links.length > 0 &&\n          <div className=\"section links\">\n            <h3>Interesting Links</h3>\n            <ul>\n              { props.interesting_links.map(link => \n                <li key={link.id}>\n                  <a href={link.url} target=\"_blank\">{ link.description }</a>\n                </li>\n              )}\n            </ul>\n          </div>\n        }\n\n        <div className=\"section bibliography\">\n          <h3>Bibliography</h3>\n          <ReactMarkdown>{ props.bibliography }</ReactMarkdown>\n        </div>\n\n        <div className=\"section cite-as\" >\n          <h3>Cite as</h3>\n          <p>\n            { buildCitation(props) }\n            <CopyOutlined className=\"copy\" onClick={copyToClipboard} />\n          </p>\n        </div>\n      </main>\n    </div>\n  )\n\n}\n\nexport default HouseLoaded;","import HouseError from './HouseError';\nimport HouseLoading from './HouseLoading';\nimport HouseLoaded from './HouseLoaded';\nimport useSWR from 'swr';\n\nconst fetcher = url => fetch(url).then(r => r.json());\n\nconst House = props => {\n\n  const { houseId } = props.match.params;\n\n  const { data, error } = useSWR(`${process.env.REACT_APP_API_URL}/items/house/${houseId}?fields=*,*.*`, fetcher);\n\n  if (error) {\n    return <HouseError />\n  } else if (data) {\n    return <HouseLoaded {...data.data } />\n  } else {\n    return <HouseLoading />\n  }\n\n}\n\nexport default House;","import { Image, Spin, Table } from 'antd';\nimport { LoadingOutlined } from '@ant-design/icons';\nimport { useHistory } from 'react-router-dom';\n\nimport './Search.scss';\n\nconst getImageSrc = result => \n  result.images?.length > 0 ?\n    `${process.env.REACT_APP_API_URL}/assets/${result.images[0].directus_files_id.id}?width=120&height=120` : null; // TODO fallback\n\nconst SearchResultsLoaded = props => {\n\n  const { data } = props;\n\n  const history = useHistory();\n\n  const rows = data && data.map(r => ({\n    key: r.id,\n    image: getImageSrc(r),\n    house_name: r.house_name,\n    city: r.city,\n    constructed: { text: r.construction_date, numeric: r.construction_date_numeric },\n    abandonded: { text: r.abandon_date, numeric: r.abandon_date_numeric },\n    dimensions: r.house_dimensions,\n    complete_plan: r.complete_plan\n  }));\n\n  const onClick = row =>\n    history.push(`/house/${row.key}`);\n\n  return (\n    <Table \n      loading={ props.loading && { indicator: <Spin indicator={ <LoadingOutlined /> } /> }}\n      dataSource={rows} \n      pagination={false}\n      onRow={row => ({ onClick: evt => onClick(row)}) } >\n\n      <Table.Column title=\"\" dataIndex=\"image\" render={src => \n        <Image src={src} preview={false} /> \n      }/>\n      <Table.Column title=\"House Name\" dataIndex=\"house_name\" />\n      <Table.Column title=\"City\" dataIndex=\"city\" />\n      <Table.Column title=\"Constructed\" dataIndex={['constructed', 'text']} />\n      <Table.Column title=\"Abandonded\" dataIndex={['abandonded', 'text']} />\n    </Table>\n  )\n\n}\n\nexport default SearchResultsLoaded;","const SearchResultsError = props => {\n\n  return (\n    <div>Error</div>\n  )\n\n}\n\nexport default SearchResultsError;","import { useState } from 'react';\nimport { ApolloClient, ApolloProvider, InMemoryCache, useQuery, gql } from '@apollo/client';\nimport { Input } from 'antd';\nimport SearchResults from './SearchResults';\nimport SearchResultsError from './SearchResultsError';\n\nconst client = new ApolloClient({\n  uri: `${process.env.REACT_APP_API_URL}/graphql`,\n  cache: new InMemoryCache({\n    typePolicies: {\n      items: {\n        //  Cf.https://www.apollographql.com/docs/react/caching/cache-configuration/#generating-unique-identifiers\n        keyFields: []\n      }\n    }\n  })\n});\n\nconst buildQuery = query => gql`\n  query {\n    items {\n      house(search: \"${query}\", limit: 100) {\n        id,\n        house_name,\n        city,\n        latitude,\n        longitude,\n        construction_date,\n        construction_date_numeric,\n        abandon_date,\n        abandon_date_numeric,\n        complete_plan,\n        house_dimensions,\n        cistern,\n        images {\n          id,\n          directus_files_id {\n            id\n          }\n        }\n      }\n    }\n  }`;\n\nconst Search = props => {\n\n  const [ query, setQuery ] = useState();\n\n  return (\n    <div className=\"search\">\n      <header>\n        <nav>\n        </nav>\n      </header>\n      \n      <div className=\"search-bar\">\n        <Input.Search \n          placeholder=\"Search...\" \n          allowClear \n          size=\"large\"\n          onSearch={value => setQuery(value)} />\n      </div>\n      \n      <div className=\"search-results\">\n        <ApolloProvider client={client}>\n          { query && \n            <SearchResultsContainer query={query} /> \n          }\n        </ApolloProvider>\n      </div>\n    </div>\n  )\n\n}\n\nfunction SearchResultsContainer(props) {\n\n  const { loading, error, data } = useQuery(buildQuery(props.query));\n\n  if (loading)\n    return <SearchResults loading={true} />\n  else if (error)\n    return <SearchResultsError />\n  else \n    return <SearchResults data={data.items.house} />\n\n}\n\nexport default Search;\n","const MapView = props => {\n\n  return (\n    <h1>Map</h1>\n  )\n\n}\n\nexport default MapView;","import House from './house/House';\nimport Search from './search/Search';\nimport MapView from './map/MapView';\n\nimport { \n  BrowserRouter as Router, \n  Link,\n  Switch, \n  Route\n} from 'react-router-dom';\n\nimport './App.scss';\n\nfunction App() {\n\n  return (\n    <Router>      \n      <Switch>\n        <Route path=\"/search\" component={Search} />\n        \n        <Route path=\"/house/:houseId\" component={House} />\n\n        <Route path=\"/map\">\n          <MapView />\n        </Route>\n\n\n        <Route path=\"/\">\n          <p>\n            Future site of the Tetrastylon DB interface. Nothing to see yet.\n          </p>\n\n          <Link to=\"/house/65dcf6b5-d0a4-45c9-a466-c072d1351c93\">Example house</Link>\n        </Route>\n      </Switch>\n    </Router>\n  );\n\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nimport 'antd/dist/antd.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('app')\n);\n"],"sourceRoot":""}
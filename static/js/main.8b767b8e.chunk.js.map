{"version":3,"sources":["house/HouseError.jsx","house/HouseLoading.jsx","house/ImageList.jsx","Navbar.jsx","house/HouseLoaded.jsx","house/House.jsx","search/SearchResults.jsx","search/SearchResultsError.jsx","search/Search.jsx","splash/SplashMapPopup.jsx","splash/SplashMap.jsx","splash/SplashPage.jsx","App.js","index.js"],"names":["HouseError","HouseLoading","className","LoadingOutlined","ImageList","props","useState","current","setCurrent","directus_files_id","title","description","images","map","img","width","src","process","id","preview","onVisibleChange","visible","Navbar","style","backgroundImage","to","ReadOutlined","SearchOutlined","HomeOutlined","BASEMAPS","buildCitation","port","window","location","permalink","protocol","hostname","user_created","last_name","first_name","substring","house_name","Date","date_updated","getUTCFullYear","href","copyToClipboard","el","document","querySelector","copy","innerHTML","asHtml","HouseLoaded","basemap","setBasemap","imageIds","length","latitude","longitude","city","MapContainer","center","zoom","zoomControl","attributionControl","TileLayer","url","Marker","position","onChange","useAerial","checkedChildren","unCheckedChildren","BankOutlined","number_of_rooms","parseFloat","house_dimensions","toFixed","building_phases","HourglassOutlined","construction_date","abandon_date","house_description","dating_of_phases","situation_of_entrance","representation_room_typology","atrium_typology","atrium_extension","impluvium_extension","other_uncovered_spaces","comments","plans_of_the_house","interesting_links","link","target","bibliography","CopyOutlined","onClick","fetcher","fetch","then","r","json","House","houseId","match","params","useSWR","data","error","getImageSrc","result","SearchResultsLoaded","rows","key","image","constructed","text","numeric","construction_date_numeric","abandonded","abandon_date_numeric","dimensions","complete_plan","loading","indicator","dataSource","pagination","Column","dataIndex","render","name","record","SearchResultsError","SearchResultsContainer","query","useQuery","gql","SearchResults","items","house","Search","setQuery","placeholder","allowClear","size","onSearch","value","SplashMapPopup","useMap","Popup","children","CloseCircleOutlined","closePopup","QUERY","SplashMap","markers","SplashPage","alt","App","path","component","client","ApolloClient","uri","cache","InMemoryCache","typePolicies","keyFields","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.8b767b8e.chunk.js","sourcesContent":["const HouseError = () => {\n\n  return (\n    <div>Error!</div>\n  )\n\n}\n\nexport default HouseError;","import { LoadingOutlined } from '@ant-design/icons';\n\nconst HouseLoading = () => {\n\n  return (\n    <div className=\"house loading\">\n      <div className=\"spinner\">\n        <LoadingOutlined />\n        <div className=\"label\">Loading</div>\n      </div>\n    </div>\n  )\n\n}\n\nexport default HouseLoading;","import { useState } from 'react';\nimport { Image } from 'antd';\n\nconst ImageList = props => {\n\n  const [ current, setCurrent ] = useState();\n\n  const { title, description } = current ? current.directus_files_id : {};\n\n  return (\n    <>\n      { props.images.map(img => \n        <Image\n          key={img.id} \n          width={200} \n          src={`${process.env.REACT_APP_API_URL}/assets/${img.directus_files_id.id}?width=200&height=200`}\n          preview={{ \n            src: `${process.env.REACT_APP_API_URL}/assets/${img.directus_files_id.id}?width=1200`,\n            onVisibleChange: visible => visible ? setCurrent(img) : setCurrent()\n          }} />\n      )}\n\n      { (title || description) && \n        <div className=\"image-caption-wrapper\">\n          <div className=\"image-caption\">\n            { title && <h4>{ title }</h4> }\n            { description && <p>{ description }</p>}\n          </div>\n        </div>\n      }\n    </>\n  )\n  \n}\n\nexport default ImageList;","import { Link } from 'react-router-dom';\nimport { HomeOutlined, ReadOutlined, SearchOutlined } from '@ant-design/icons';\n\nconst Navbar = props => {\n\n  return (\n    <nav className=\"content-nav\" style={{ backgroundImage: 'url(\"/logo_navbar_rooftile.png\")' }}>\n      <Link className=\"nav-item-wrapper\" to=\"/bibliography\">\n        <div className=\"nav-item\">\n          <ReadOutlined />\n          <span>Bibliography</span>\n        </div>\n      </Link>\n\n      <Link className=\"nav-item-wrapper\" to=\"/search\">\n        <div className=\"nav-item\">\n          <SearchOutlined />\n          <span>Search</span>\n        </div>\n      </Link>\n\n      <Link className=\"nav-item-wrapper\" to=\"/\">\n        <div className=\"nav-item\">\n          <HomeOutlined />\n          <span>Home</span>\n        </div>\n      </Link>\n    </nav>\n  )\n\n}\n\nexport default Navbar;","import { useState } from 'react';\nimport { Switch, Tooltip } from 'antd';\nimport { MapContainer, TileLayer, Marker } from 'react-leaflet';\nimport { BankOutlined, HourglassOutlined, CopyOutlined } from '@ant-design/icons';\nimport ReactMarkdown from 'react-markdown';\nimport copy from 'copy-html-to-clipboard';\nimport ImageList from './ImageList';\nimport Navbar from '../Navbar';\n\nimport './House.scss';\n\nconst BASEMAPS = {\n  street: 'https://server.arcgisonline.com/ArcGIS/rest/services/World_Street_Map/MapServer/tile/{z}/{y}/{x}',\n  aerial: 'https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}'\n}\n\nconst buildCitation = props => {\n  \n  const port = window.location.port ? `:${window.location.port}` : '';\n\n  const permalink = `${window.location.protocol}//${window.location.hostname}${port}/house/${props.id}`;\n\n  return (\n    <span>\n      { props.user_created.last_name }, { props.user_created.first_name.substring(0, 1) }\n      ., \"{ props.house_name }\", Tetrastylon, {new Date(props.date_updated).getUTCFullYear()}\n      , <a href={permalink}>{permalink}</a>.\n    </span>\n  )\n}\n\nconst copyToClipboard = () => {\n  const el = document.querySelector('.section.cite-as p');\n\n  copy(el.innerHTML, {\n    asHtml: true,\n  });\n}\n\nconst HouseLoaded = props => {\n\n  const [ basemap, setBasemap ] = useState(BASEMAPS.street);\n\n  const imageIds = props.images.map(img => img.directus_files_id);\n\n  const backgroundImage = imageIds.length > 0 ? `url('${process.env.REACT_APP_API_URL}/assets/${imageIds[0].id}?width=1400&height=600')` : null; \n\n  const location = [ props.latitude, props.longitude ];\n\n  const onToggleBasemap = useAerial => useAerial ? \n    setBasemap(BASEMAPS.aerial) : setBasemap(BASEMAPS.street);\n\n  return (\n    <div className=\"house loaded\">\n      <header>\n        <Navbar />\n\n        <div className=\"jumbo\" style={{ backgroundImage }}>\n          <div className=\"jumbo-contents\">\n            <h1>{ props.house_name }</h1>          \n            <h2>{ props.city }</h2>\n          </div>\n\n          <div>\n            <div className=\"mini-map\">\n              <MapContainer center={location} zoom={5} zoomControl={false} attributionControl={false}>\n                {/* Forces a redraw. Kind of an odd hack to account for the fact that TileLayer is immutable */}\n                { basemap == BASEMAPS.street && <TileLayer url={basemap} /> }\n                { basemap == BASEMAPS.aerial && <TileLayer url={basemap} /> }\n                <Marker position={location} />\n              </MapContainer>\n              \n              <div className=\"layer-toggle\">\n                <Switch \n                  onChange={onToggleBasemap} \n                  checkedChildren=\"SATELLITE\"\n                  unCheckedChildren=\"STREET\" />\n              </div>\n            </div>  \n          </div>\n        </div>\n      </header>\n\n      <main>\n        <div className=\"section key-properties\">\n          <ul>\n            <li>\n              <BankOutlined /> { props.number_of_rooms } Rooms, { parseFloat(props.house_dimensions).toFixed() } m²\n            </li>\n            <li>\n              { props.building_phases && <>\n                <HourglassOutlined /> { props.building_phases } Building Phase{props.building_phases > 0 && 's'}\n              </>}\n            </li>\n            <li>\n              <label>Constructed</label> <span className=\"nowrap\">{props.construction_date }</span>\n            </li>\n            <li>\n              <label>Abandonded</label> <span className=\"nowrap\">{ props.abandon_date }</span>\n            </li>\n          </ul>\n        </div>\n\n        <div className=\"section description\">\n          <h3>Description</h3>\n          <ReactMarkdown>{ props.house_description }</ReactMarkdown>  \n        </div>\n\n        <div className=\"section\">\n          <h3>Dating of Phases</h3>\n          <ReactMarkdown>{ props.dating_of_phases }</ReactMarkdown>\n        </div>\n\n        <div className=\"section\">\n          <h3>Situation of Entrance</h3>\n          <ReactMarkdown>{ props.situation_of_entrance }</ReactMarkdown>\n        </div>\n        \n        <div className=\"section\">\n          <h3>Representation Room Typology</h3>\n          <ReactMarkdown>{ props.representation_room_typology }</ReactMarkdown>\n        </div>\n\n        <div className=\"section atrium\">\n          <h3>Atrium</h3>\n          <ReactMarkdown>{ props.atrium_typology }</ReactMarkdown>\n          { props.atrium_typology && props.atrium_extension ? ', ' : ''} \n          { props.atrium_extension && `${parseFloat(props.atrium_extension).toFixed()} m²` }\n          { !(props.atrium_extension || props.atrium_typology) && '-' }\n        </div>\n\n        <div className=\"section\">\n          <h3>Impluvium Extension</h3>\n          { props.impluvium_extension ? `${parseFloat(props.impluvium_extension).toFixed()} m²` : '-' }\n        </div>\n\n        <div className=\"section\">\n          <h3>Other Uncovered Spaces</h3>\n          <ReactMarkdown>{ props.other_uncovered_spaces }</ReactMarkdown>\n        </div>\n\n        { props.comments && \n          <div className=\"section\">\n            <h3>Comments</h3>\n            <ReactMarkdown>{ props.comments }</ReactMarkdown>\n          </div>\n        }\n\n        { props.images.length > 0 &&\n          <div className=\"section images\">\n            <h3>Images</h3>\n            <ImageList images={props.images} />\n          </div>\n        }\n\n        { props.plans_of_the_house.length > 0 &&\n          <div className=\"section plans\">\n            <h3>Plans of the House</h3>\n            <ImageList images={props.plans_of_the_house} />\n          </div>\n        }\n\n        { props.interesting_links && props.interesting_links.length > 0 &&\n          <div className=\"section links\">\n            <h3>Interesting Links</h3>\n            <ul>\n              { props.interesting_links.map(link => \n                <li key={link.id}>\n                  <a href={link.url} target=\"_blank\">{ link.description }</a>\n                </li>\n              )}\n            </ul>\n          </div>\n        }\n\n        <div className=\"section bibliography\">\n          <h3>Bibliography</h3>\n          <ReactMarkdown>{ props.bibliography }</ReactMarkdown>\n        </div>\n\n        <div className=\"section cite-as\" >\n          <h3>Cite as</h3>\n          <p>\n            { buildCitation(props) }\n            <Tooltip title=\"Copy to Clipboard\">\n              <CopyOutlined className=\"copy\" onClick={copyToClipboard} />\n            </Tooltip>\n          </p>\n        </div>\n      </main>\n    </div>\n  )\n\n}\n\nexport default HouseLoaded;","import useSWR from 'swr';\nimport HouseError from './HouseError';\nimport HouseLoading from './HouseLoading';\nimport HouseLoaded from './HouseLoaded';\n\nconst fetcher = url => fetch(url).then(r => r.json());\n\nconst House = props => {\n\n  const { houseId } = props.match.params;\n\n  const { data, error } = useSWR(`${process.env.REACT_APP_API_URL}/items/house/${houseId}?fields=*,*.*,*.*.id,*.*.title,*.*.description`, fetcher);\n\n  if (error) {\n    return <HouseError />\n  } else if (data) {\n    return <HouseLoaded {...data.data } />\n  } else {\n    return <HouseLoading />\n  }\n\n}\n\nexport default House;","import { Image, Spin, Table } from 'antd';\nimport { Link } from 'react-router-dom';\nimport { LoadingOutlined } from '@ant-design/icons';\n\nimport './Search.scss';\n\nconst getImageSrc = result => \n  result.images?.length > 0 ?\n    `${process.env.REACT_APP_API_URL}/assets/${result.images[0].directus_files_id.id}?width=120&height=120` : null; // TODO fallback\n\nconst SearchResultsLoaded = props => {\n\n  const { data } = props;\n\n  const rows = data && data.map(r => ({\n    key: r.id,\n    image: getImageSrc(r),\n    house_name: r.house_name,\n    city: r.city,\n    constructed: { text: r.construction_date, numeric: r.construction_date_numeric },\n    abandonded: { text: r.abandon_date, numeric: r.abandon_date_numeric },\n    dimensions: r.house_dimensions,\n    complete_plan: r.complete_plan\n  }));\n\n  return (\n    <Table \n      loading={ props.loading && { indicator: <Spin indicator={ <LoadingOutlined /> } /> }}\n      dataSource={rows} \n      pagination={false}>\n\n      <Table.Column title=\"\" dataIndex=\"image\" render={src => \n        <Image src={src} preview={false} /> \n      }/>\n\n      <Table.Column title=\"House Name\" dataIndex=\"house_name\" render={(name, record) => \n        <Link to={`/house/${record.key}`}>{name}</Link>\n      }/>\n\n      <Table.Column title=\"City\" dataIndex=\"city\" />\n      <Table.Column title=\"Constructed\" dataIndex={['constructed', 'text']} />\n      <Table.Column title=\"Abandonded\" dataIndex={['abandonded', 'text']} />\n    </Table>\n  )\n\n}\n\nexport default SearchResultsLoaded;","const SearchResultsError = props => {\n\n  return (\n    <div>Error</div>\n  )\n\n}\n\nexport default SearchResultsError;","import { useState } from 'react';\nimport { useQuery, gql } from '@apollo/client';\nimport { Input } from 'antd';\nimport Navbar from '../Navbar';\nimport SearchResults from './SearchResults';\nimport SearchResultsError from './SearchResultsError';\n\nconst buildQuery = query => gql`\n  query {\n    items {\n      house(search: \"${query}\", limit: 100) {\n        id,\n        house_name,\n        city,\n        latitude,\n        longitude,\n        construction_date,\n        construction_date_numeric,\n        abandon_date,\n        abandon_date_numeric,\n        complete_plan,\n        house_dimensions,\n        cistern,\n        images {\n          id,\n          directus_files_id {\n            id\n          }\n        }\n      }\n    }\n  }`;\n\nconst Search = props => {\n\n  const [ query, setQuery ] = useState();\n\n  return (\n    <div className=\"search\">\n      <header>\n        <Navbar />\n      </header>\n      \n      <main>\n        <div className=\"search-bar\">\n          <Input.Search \n            placeholder=\"Search...\" \n            allowClear \n            size=\"large\"\n            onSearch={value => setQuery(value)} />\n        </div>\n        \n        <div className=\"search-results\">\n          { query && \n            <SearchResultsContainer query={query} /> \n          }\n        </div>\n      </main>\n    </div>\n  )\n\n}\n\nfunction SearchResultsContainer(props) {\n\n  const { loading, error, data } = useQuery(buildQuery(props.query));\n\n  if (loading)\n    return <SearchResults loading={true} />\n  else if (error)\n    return <SearchResultsError />\n  else \n    return <SearchResults data={data.items.house} />\n\n}\n\nexport default Search;\n","import { Popup, useMap } from 'react-leaflet';\nimport { CloseCircleOutlined } from  '@ant-design/icons';\n\nconst SplashMapPopup = props => {\n\n  const map = useMap();\n\n  const onClose = () =>\n    map.closePopup();\n\n  return (\n    <Popup {...props} >\n      {props.children}\n\n      <CloseCircleOutlined \n        className=\"leaflet-tetrastylon-close-button\" \n        onClick={onClose} />\n    </Popup>\n  )\n\n}\n\nexport default SplashMapPopup;","import { Switch } from 'antd';\nimport { useState } from 'react';\nimport { MapContainer, TileLayer, Marker } from 'react-leaflet';\nimport SplashMapPopup from './SplashMapPopup';\nimport { useQuery, gql } from '@apollo/client';\n\nconst BASEMAPS = {\n  street: 'https://server.arcgisonline.com/ArcGIS/rest/services/World_Street_Map/MapServer/tile/{z}/{y}/{x}',\n  aerial: 'https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}'\n}\n\nconst QUERY = gql`\n  query {\n    items {\n      house {\n        id,\n        house_name,\n        city,\n        latitude,\n        longitude,\n        images(limit: 1) {\n          id,\n          directus_files_id {\n            id\n          }\n        }\n      }\n    }\n  }`;\n\nconst SplashMap = props => {\n\n  const [ basemap, setBasemap ] = useState(BASEMAPS.street);\n\n  const { loading, error, data } = useQuery(QUERY);\n\n  const onToggleBasemap = useAerial => useAerial ? \n    setBasemap(BASEMAPS.aerial) : setBasemap(BASEMAPS.street);\n\n  const markers = data ? data.items.house.map(house => \n    <Marker key={house.id} position={[ house.latitude, house.longitude ]}>\n      <SplashMapPopup>\n        { house.images.length > 0 && \n          <div className=\"popup-thumbnail\">\n            <img src={`${process.env.REACT_APP_API_URL}/assets/${house.images[0].directus_files_id.id}?width=240&height=240`} />\n          </div>\n        }\n\n        <div className=\"popup-body\">\n          <h1>{ house.house_name }</h1>\n          <h2>{ house.city }</h2>\n          <a href={`/house/${house.id}`}>Details</a>\n        </div>\n      </SplashMapPopup>\n    </Marker>\n  ) : [];\n\n  const location = [ 40, 15 ];\n\n  return (\n    <>\n      <MapContainer center={location} zoom={7} zoomControl={false} attributionControl={false}>\n        {/* Forces a redraw. Kind of an odd hack to account for the fact that TileLayer is immutable */}\n        { basemap == BASEMAPS.street && <TileLayer url={basemap} /> }\n        { basemap == BASEMAPS.aerial && <TileLayer url={basemap} /> }\n        { markers }\n      </MapContainer>\n\n      <div className=\"layer-toggle\">\n        <Switch \n          onChange={onToggleBasemap} \n          checkedChildren=\"SATELLITE\"\n          unCheckedChildren=\"STREET\" />\n      </div>\n    </>\n  )\n\n}\n\nexport default SplashMap;","import { BankOutlined } from '@ant-design/icons';\nimport { Link } from 'react-router-dom';\nimport { HashLink } from 'react-router-hash-link';\nimport SplashMap from './SplashMap';\n\nimport './SplashPage.scss';\n\nconst SplashPage = props => {\n\n  return (\n    <div className=\"splash-page\">\n      <nav className=\"splash-nav\">\n        <ul>\n          <li><HashLink to=\"#map\">Map</HashLink></li>\n          <li><HashLink to=\"#team\">Team</HashLink></li>\n          <li><HashLink to=\"#about\">About</HashLink></li>\n          <li><Link to=\"/search\">Database</Link></li>\n        </ul>\n      </nav>\n\n      <section className=\"splash-header\">\n        <h1>\n          <img src=\"/logo_splash_rooftile.png\" alt=\"Tetrastylon Project\" />\n        </h1>\n      </section>\n\n      <section \n        className=\"deco-image\" \n        style={{ backgroundImage: \"url('/atri_des_d_oest.jpg')\" }}>\n\n        <div className=\"title\">\n          <h3>The Tetrastyle Courtyard House</h3>\n          <h4>A Roman Domus with a Hybrid Cultural Conception</h4>\n        </div>\n      </section>\n\n      <section className=\"intro\">\n        <h4>Short description goes here...</h4>\n        <p>\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do \n          eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim \n          ad minim veniam, quis nostrud exercitation ullamco laboris nisi \n          ut aliquip ex ea commodo consequat.\n        </p>\n\n        <p className=\"to-database\">\n          <Link to=\"/search\">\n            <BankOutlined /> \n            <span>Browse Database</span>\n          </Link>\n        </p>\n      </section>\n\n      <section className=\"the-map\" id=\"map\">\n        <SplashMap />\n      </section>\n\n      <section className=\"team\" id=\"team\">\n        <h4>Project Team...</h4>\n      </section>\n      \n      <section className=\"acknowledgements\" id=\"acknowledgements\">\n        <h5>Funding from</h5>\n        <img src=\"/logo_la_sapienza.png\" style={{ width: 220 }} />\n        <img src=\"/logo-ce-horizontal-en-quadri-lr.png\" style={{ width:250 }} />\n      </section>\n\n      <footer id=\"about\">\n        <p>About, Imprint, etc. goes here.</p>\n      </footer>\n    </div>\n  )\n\n}\n\nexport default SplashPage;","import House from './house/House';\nimport Search from './search/Search';\nimport SplashPage from './splash/SplashPage';\nimport { \n  BrowserRouter as Router, \n  Switch, \n  Route\n} from 'react-router-dom';\n\nimport './App.scss';\n\nfunction App() {\n\n  return (\n    <Router>      \n      <Switch>\n        <Route path=\"/search\" component={Search} />\n        <Route path=\"/house/:houseId\" component={House} />\n        <Route path=\"/\" component={SplashPage} />\n      </Switch>\n    </Router>\n  );\n\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { ApolloClient, ApolloProvider, InMemoryCache } from '@apollo/client';\nimport App from './App';\n\nimport 'antd/dist/antd.css';\n\nconst client = new ApolloClient({\n  uri: `${process.env.REACT_APP_API_URL}/graphql`,\n  cache: new InMemoryCache({\n    typePolicies: {\n      items: {\n        //  Cf.https://www.apollographql.com/docs/react/caching/cache-configuration/#generating-unique-identifiers\n        keyFields: []\n      }\n    }\n  })\n});\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <App />\n  </ApolloProvider>,\n  document.getElementById('app')\n);\n"],"sourceRoot":""}